Terminals unused in grammar

    ID
    KEYWORD_THEN
    REAL
    DOUBLEDOT
    COMMENT


Rules useless in parser due to conflicts

   66 indexed: ε


State 19 conflicts: 1 shift/reduce, 1 reduce/reduce
State 116 conflicts: 13 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt
    2        | program stmt

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | KEYWORD_BREAK SEMICOLON
    9     | KEYWORD_CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr op expr
   15     | term

   16 op: '+'
   17   | '-'
   18   | '*'
   19   | '/'
   20   | '%'
   21   | GREATER
   22   | GREATER_EQUAL
   23   | LESS
   24   | LESS_EQUAL
   25   | EQUALS
   26   | NOT_EQUAL
   27   | KEYWORD_AND
   28   | KEYWORD_OR

   29 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS
   30     | '-' expr
   31     | KEYWORD_NOT expr
   32     | INCREMENT lvalue
   33     | lvalue INCREMENT
   34     | DECREMENT lvalue
   35     | lvalue DECREMENT
   36     | primary

   37 assignexpr: lvalue '=' expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS
   42        | const

   43 lvalue: IDENTIFIER
   44       | KEYWORD_LOCAL IDENTIFIER
   45       | DOUBLECOLON IDENTIFIER
   46       | member

   47 member: lvalue DOT IDENTIFIER
   48       | lvalue LEFTBRACKET expr RIGHTBRACKET
   49       | call DOT IDENTIFIER
   50       | call LEFTBRACKET expr RIGHTBRACKET

   51 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS
   52     | lvalue callsuffix
   53     | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS

   57 methodcall: DOUBLECOLON IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS

   58 elist: expr COMMA expr '*'
   59      | expr '*'
   60      | ε

   61 objectdef: LEFTBRACKET elist RIGHTBRACKET
   62          | LEFTBRACKET indexed RIGHTBRACKET
   63          | LEFTBRACKET RIGHTBRACKET

   64 indexed: indexedelem COMMA indexedelem '*'
   65        | indexedelem '*'
   66        | ε

   67 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE

   68 block: LEFTBRACE stmt '*' RIGHTBRACE
   69      | LEFTBRACE RIGHTBRACE

   70 funcdef: KEYWORD_FUNCTION IDENTIFIER LEFTPARENTHESIS idlist RIGHTPARENTHESIS block
   71        | KEYWORD_FUNCTION LEFTPARENTHESIS idlist RIGHTPARENTHESIS block

   72 const: INTEGER
   73      | STRING
   74      | KEYWORD_NIL
   75      | KEYWORD_TRUE
   76      | KEYWORD_FALSE

   77 idlist: IDENTIFIER COMMA IDENTIFIER '*'
   78       | IDENTIFIER '*'
   79       | ε

   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   81       | KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

   82 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

   84 returnstmt: KEYWORD_RETURN expr SEMICOLON
   85           | KEYWORD_RETURN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 20
    '*' (42) 18 58 59 64 65 68 77 78
    '+' (43) 16
    '-' (45) 17 30
    '/' (47) 19
    '=' (61) 37
    error (256)
    ID (258)
    INTEGER (259) 72
    KEYWORD_IF (260) 80 81
    KEYWORD_THEN (261)
    KEYWORD_ELSE (262) 80
    KEYWORD_WHILE (263) 82
    KEYWORD_FOR (264) 83
    KEYWORD_FUNCTION (265) 70 71
    KEYWORD_RETURN (266) 84 85
    KEYWORD_BREAK (267) 8
    KEYWORD_CONTINUE (268) 9
    KEYWORD_AND (269) 27
    KEYWORD_NOT (270) 31
    KEYWORD_OR (271) 28
    KEYWORD_LOCAL (272) 44
    KEYWORD_TRUE (273) 75
    KEYWORD_FALSE (274) 76
    KEYWORD_NIL (275) 74
    GREATER (276) 21
    LESS (277) 23
    EQUALS (278) 25
    GREATER_EQUAL (279) 22
    LESS_EQUAL (280) 24
    NOT_EQUAL (281) 26
    INCREMENT (282) 32 33
    DECREMENT (283) 34 35
    STRING (284) 73
    REAL (285)
    IDENTIFIER (286) 43 44 45 47 49 57 70 77 78
    LEFTBRACE (287) 67 68 69
    RIGHTBRACE (288) 67 68 69
    LEFTBRACKET (289) 48 50 61 62 63
    RIGHTBRACKET (290) 48 50 61 62 63
    LEFTPARENTHESIS (291) 29 41 51 53 56 57 70 71 80 81 82 83
    RIGHTPARENTHESIS (292) 29 41 51 53 56 57 70 71 80 81 82 83
    COMMA (293) 58 64 77
    SEMICOLON (294) 3 8 9 12 83 84 85
    COLON (295) 67
    DOT (296) 47 49
    DOUBLEDOT (297)
    DOUBLECOLON (298) 45 57
    COMMENT (299)
    UMINUS (300)


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1 2
        on right: 0 2
    stmt (54)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 1 2 68 80 81 82 83
    expr (55)
        on left: 13 14 15
        on right: 3 14 29 30 31 37 48 50 58 59 67 80 81 82 83 84
    op (56)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 14
    term (57)
        on left: 29 30 31 32 33 34 35 36
        on right: 15
    assignexpr (58)
        on left: 37
        on right: 13
    primary (59)
        on left: 38 39 40 41 42
        on right: 36
    lvalue (60)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member (61)
        on left: 47 48 49 50
        on right: 46
    call (62)
        on left: 51 52 53
        on right: 39 49 50 51
    callsuffix (63)
        on left: 54 55
        on right: 52
    normcall (64)
        on left: 56
        on right: 54
    methodcall (65)
        on left: 57
        on right: 55
    elist (66)
        on left: 58 59 60
        on right: 51 53 56 57 61 83
    objectdef (67)
        on left: 61 62 63
        on right: 40
    indexed (68)
        on left: 64 65 66
        on right: 62
    indexedelem (69)
        on left: 67
        on right: 64 65
    block (70)
        on left: 68 69
        on right: 10 70 71
    funcdef (71)
        on left: 70 71
        on right: 11 41 53
    const (72)
        on left: 72 73 74 75 76
        on right: 42
    idlist (73)
        on left: 77 78 79
        on right: 70 71
    ifstmt (74)
        on left: 80 81
        on right: 4
    whilestmt (75)
        on left: 82
        on right: 5
    forstmt (76)
        on left: 83
        on right: 6
    returnstmt (77)
        on left: 84 85
        on right: 7


State 0

    0 $accept: • program $end

    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    program     go to state 24
    stmt        go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 1

   72 const: INTEGER •

    $default  reduce using rule 72 (const)


State 2

   80 ifstmt: KEYWORD_IF • LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   81       | KEYWORD_IF • LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

    LEFTPARENTHESIS  shift, and go to state 41


State 3

   82 whilestmt: KEYWORD_WHILE • LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

    LEFTPARENTHESIS  shift, and go to state 42


State 4

   83 forstmt: KEYWORD_FOR • LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

    LEFTPARENTHESIS  shift, and go to state 43


State 5

   70 funcdef: KEYWORD_FUNCTION • IDENTIFIER LEFTPARENTHESIS idlist RIGHTPARENTHESIS block
   71        | KEYWORD_FUNCTION • LEFTPARENTHESIS idlist RIGHTPARENTHESIS block

    IDENTIFIER       shift, and go to state 44
    LEFTPARENTHESIS  shift, and go to state 45


State 6

   84 returnstmt: KEYWORD_RETURN • expr SEMICOLON
   85           | KEYWORD_RETURN • SEMICOLON

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    SEMICOLON        shift, and go to state 46
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 47
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 7

    8 stmt: KEYWORD_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 48


State 8

    9 stmt: KEYWORD_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 9

   31 term: KEYWORD_NOT • expr

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 50
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 10

   44 lvalue: KEYWORD_LOCAL • IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 11

   75 const: KEYWORD_TRUE •

    $default  reduce using rule 75 (const)


State 12

   76 const: KEYWORD_FALSE •

    $default  reduce using rule 76 (const)


State 13

   74 const: KEYWORD_NIL •

    $default  reduce using rule 74 (const)


State 14

   32 term: INCREMENT • lvalue

    KEYWORD_LOCAL    shift, and go to state 10
    IDENTIFIER       shift, and go to state 17
    LEFTPARENTHESIS  shift, and go to state 52
    DOUBLECOLON      shift, and go to state 22

    lvalue  go to state 53
    member  go to state 31
    call    go to state 54


State 15

   34 term: DECREMENT • lvalue

    KEYWORD_LOCAL    shift, and go to state 10
    IDENTIFIER       shift, and go to state 17
    LEFTPARENTHESIS  shift, and go to state 52
    DOUBLECOLON      shift, and go to state 22

    lvalue  go to state 55
    member  go to state 31
    call    go to state 54


State 16

   73 const: STRING •

    $default  reduce using rule 73 (const)


State 17

   43 lvalue: IDENTIFIER •

    $default  reduce using rule 43 (lvalue)


State 18

   68 block: LEFTBRACE • stmt '*' RIGHTBRACE
   69      | LEFTBRACE • RIGHTBRACE

    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    RIGHTBRACE        shift, and go to state 56
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    stmt        go to state 57
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 19

   61 objectdef: LEFTBRACKET • elist RIGHTBRACKET
   62          | LEFTBRACKET • indexed RIGHTBRACKET
   63          | LEFTBRACKET • RIGHTBRACKET

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACE        shift, and go to state 58
    LEFTBRACKET      shift, and go to state 19
    RIGHTBRACKET     shift, and go to state 59
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    RIGHTBRACKET  [reduce using rule 60 (elist)]
    RIGHTBRACKET  [reduce using rule 66 (indexed)]

    expr         go to state 60
    term         go to state 27
    assignexpr   go to state 28
    primary      go to state 29
    lvalue       go to state 30
    member       go to state 31
    call         go to state 32
    elist        go to state 61
    objectdef    go to state 33
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 36


State 20

   29 term: LEFTPARENTHESIS • expr RIGHTPARENTHESIS
   41 primary: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS
   53 call: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    INTEGER           shift, and go to state 1
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    expr        go to state 64
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 65
    const       go to state 36


State 21

   12 stmt: SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 22

   45 lvalue: DOUBLECOLON • IDENTIFIER

    IDENTIFIER  shift, and go to state 66


State 23

   30 term: '-' • expr

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 67
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 24

    0 $accept: program • $end
    2 program: program • stmt

    $end              shift, and go to state 68
    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    stmt        go to state 69
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 25

    1 program: stmt •

    $default  reduce using rule 1 (program)


State 26

    3 stmt: expr • SEMICOLON
   14 expr: expr • op expr

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    SEMICOLON      shift, and go to state 78
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 27

   15 expr: term •

    $default  reduce using rule 15 (expr)


State 28

   13 expr: assignexpr •

    $default  reduce using rule 13 (expr)


State 29

   36 term: primary •

    $default  reduce using rule 36 (term)


State 30

   33 term: lvalue • INCREMENT
   35     | lvalue • DECREMENT
   37 assignexpr: lvalue • '=' expr
   38 primary: lvalue •
   47 member: lvalue • DOT IDENTIFIER
   48       | lvalue • LEFTBRACKET expr RIGHTBRACKET
   52 call: lvalue • callsuffix

    INCREMENT        shift, and go to state 85
    DECREMENT        shift, and go to state 86
    LEFTBRACKET      shift, and go to state 87
    LEFTPARENTHESIS  shift, and go to state 88
    DOT              shift, and go to state 89
    DOUBLECOLON      shift, and go to state 90
    '='              shift, and go to state 91

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 31

   46 lvalue: member •

    $default  reduce using rule 46 (lvalue)


State 32

   39 primary: call •
   49 member: call • DOT IDENTIFIER
   50       | call • LEFTBRACKET expr RIGHTBRACKET
   51 call: call • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 95
    LEFTPARENTHESIS  shift, and go to state 96
    DOT              shift, and go to state 97

    $default  reduce using rule 39 (primary)


State 33

   40 primary: objectdef •

    $default  reduce using rule 40 (primary)


State 34

   10 stmt: block •

    $default  reduce using rule 10 (stmt)


State 35

   11 stmt: funcdef •

    $default  reduce using rule 11 (stmt)


State 36

   42 primary: const •

    $default  reduce using rule 42 (primary)


State 37

    4 stmt: ifstmt •

    $default  reduce using rule 4 (stmt)


State 38

    5 stmt: whilestmt •

    $default  reduce using rule 5 (stmt)


State 39

    6 stmt: forstmt •

    $default  reduce using rule 6 (stmt)


State 40

    7 stmt: returnstmt •

    $default  reduce using rule 7 (stmt)


State 41

   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS • expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   81       | KEYWORD_IF LEFTPARENTHESIS • expr RIGHTPARENTHESIS stmt

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 98
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 42

   82 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS • expr RIGHTPARENTHESIS stmt

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 99
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 43

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS • elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 100
    objectdef   go to state 33
    const       go to state 36


State 44

   70 funcdef: KEYWORD_FUNCTION IDENTIFIER • LEFTPARENTHESIS idlist RIGHTPARENTHESIS block

    LEFTPARENTHESIS  shift, and go to state 101


State 45

   71 funcdef: KEYWORD_FUNCTION LEFTPARENTHESIS • idlist RIGHTPARENTHESIS block

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 79 (idlist)

    idlist  go to state 103


State 46

   85 returnstmt: KEYWORD_RETURN SEMICOLON •

    $default  reduce using rule 85 (returnstmt)


State 47

   14 expr: expr • op expr
   84 returnstmt: KEYWORD_RETURN expr • SEMICOLON

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    SEMICOLON      shift, and go to state 104
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 48

    8 stmt: KEYWORD_BREAK SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 49

    9 stmt: KEYWORD_CONTINUE SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 50

   14 expr: expr • op expr
   31 term: KEYWORD_NOT expr •

    $default  reduce using rule 31 (term)

    op  go to state 84


State 51

   44 lvalue: KEYWORD_LOCAL IDENTIFIER •

    $default  reduce using rule 44 (lvalue)


State 52

   53 call: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    KEYWORD_FUNCTION  shift, and go to state 5

    funcdef  go to state 105


State 53

   32 term: INCREMENT lvalue •
   47 member: lvalue • DOT IDENTIFIER
   48       | lvalue • LEFTBRACKET expr RIGHTBRACKET
   52 call: lvalue • callsuffix

    LEFTBRACKET      shift, and go to state 87
    LEFTPARENTHESIS  shift, and go to state 88
    DOT              shift, and go to state 89
    DOUBLECOLON      shift, and go to state 90

    $default  reduce using rule 32 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 54

   49 member: call • DOT IDENTIFIER
   50       | call • LEFTBRACKET expr RIGHTBRACKET
   51 call: call • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 95
    LEFTPARENTHESIS  shift, and go to state 96
    DOT              shift, and go to state 97


State 55

   34 term: DECREMENT lvalue •
   47 member: lvalue • DOT IDENTIFIER
   48       | lvalue • LEFTBRACKET expr RIGHTBRACKET
   52 call: lvalue • callsuffix

    LEFTBRACKET      shift, and go to state 87
    LEFTPARENTHESIS  shift, and go to state 88
    DOT              shift, and go to state 89
    DOUBLECOLON      shift, and go to state 90

    $default  reduce using rule 34 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 56

   69 block: LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 69 (block)


State 57

   68 block: LEFTBRACE stmt • '*' RIGHTBRACE

    '*'  shift, and go to state 106


State 58

   67 indexedelem: LEFTBRACE • expr COLON expr RIGHTBRACE

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 107
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 59

   63 objectdef: LEFTBRACKET RIGHTBRACKET •

    $default  reduce using rule 63 (objectdef)


State 60

   14 expr: expr • op expr
   58 elist: expr • COMMA expr '*'
   59      | expr • '*'

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    COMMA          shift, and go to state 108
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 109
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 61

   61 objectdef: LEFTBRACKET elist • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 110


State 62

   62 objectdef: LEFTBRACKET indexed • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 111


State 63

   64 indexed: indexedelem • COMMA indexedelem '*'
   65        | indexedelem • '*'

    COMMA  shift, and go to state 112
    '*'    shift, and go to state 113


State 64

   14 expr: expr • op expr
   29 term: LEFTPARENTHESIS expr • RIGHTPARENTHESIS

    KEYWORD_AND       shift, and go to state 70
    KEYWORD_OR        shift, and go to state 71
    GREATER           shift, and go to state 72
    LESS              shift, and go to state 73
    EQUALS            shift, and go to state 74
    GREATER_EQUAL     shift, and go to state 75
    LESS_EQUAL        shift, and go to state 76
    NOT_EQUAL         shift, and go to state 77
    RIGHTPARENTHESIS  shift, and go to state 114
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83

    op  go to state 84


State 65

   41 primary: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS
   53 call: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 115


State 66

   45 lvalue: DOUBLECOLON IDENTIFIER •

    $default  reduce using rule 45 (lvalue)


State 67

   14 expr: expr • op expr
   30 term: '-' expr •

    $default  reduce using rule 30 (term)

    op  go to state 84


State 68

    0 $accept: program $end •

    $default  accept


State 69

    2 program: program stmt •

    $default  reduce using rule 2 (program)


State 70

   27 op: KEYWORD_AND •

    $default  reduce using rule 27 (op)


State 71

   28 op: KEYWORD_OR •

    $default  reduce using rule 28 (op)


State 72

   21 op: GREATER •

    $default  reduce using rule 21 (op)


State 73

   23 op: LESS •

    $default  reduce using rule 23 (op)


State 74

   25 op: EQUALS •

    $default  reduce using rule 25 (op)


State 75

   22 op: GREATER_EQUAL •

    $default  reduce using rule 22 (op)


State 76

   24 op: LESS_EQUAL •

    $default  reduce using rule 24 (op)


State 77

   26 op: NOT_EQUAL •

    $default  reduce using rule 26 (op)


State 78

    3 stmt: expr SEMICOLON •

    $default  reduce using rule 3 (stmt)


State 79

   16 op: '+' •

    $default  reduce using rule 16 (op)


State 80

   17 op: '-' •

    $default  reduce using rule 17 (op)


State 81

   18 op: '*' •

    $default  reduce using rule 18 (op)


State 82

   19 op: '/' •

    $default  reduce using rule 19 (op)


State 83

   20 op: '%' •

    $default  reduce using rule 20 (op)


State 84

   14 expr: expr op • expr

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 116
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 85

   33 term: lvalue INCREMENT •

    $default  reduce using rule 33 (term)


State 86

   35 term: lvalue DECREMENT •

    $default  reduce using rule 35 (term)


State 87

   48 member: lvalue LEFTBRACKET • expr RIGHTBRACKET

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 117
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 88

   56 normcall: LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 118
    objectdef   go to state 33
    const       go to state 36


State 89

   47 member: lvalue DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 119


State 90

   57 methodcall: DOUBLECOLON • IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS

    IDENTIFIER  shift, and go to state 120


State 91

   37 assignexpr: lvalue '=' • expr

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 121
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 92

   52 call: lvalue callsuffix •

    $default  reduce using rule 52 (call)


State 93

   54 callsuffix: normcall •

    $default  reduce using rule 54 (callsuffix)


State 94

   55 callsuffix: methodcall •

    $default  reduce using rule 55 (callsuffix)


State 95

   50 member: call LEFTBRACKET • expr RIGHTBRACKET

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 122
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 96

   51 call: call LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 123
    objectdef   go to state 33
    const       go to state 36


State 97

   49 member: call DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 124


State 98

   14 expr: expr • op expr
   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr • RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   81       | KEYWORD_IF LEFTPARENTHESIS expr • RIGHTPARENTHESIS stmt

    KEYWORD_AND       shift, and go to state 70
    KEYWORD_OR        shift, and go to state 71
    GREATER           shift, and go to state 72
    LESS              shift, and go to state 73
    EQUALS            shift, and go to state 74
    GREATER_EQUAL     shift, and go to state 75
    LESS_EQUAL        shift, and go to state 76
    NOT_EQUAL         shift, and go to state 77
    RIGHTPARENTHESIS  shift, and go to state 125
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83

    op  go to state 84


State 99

   14 expr: expr • op expr
   82 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr • RIGHTPARENTHESIS stmt

    KEYWORD_AND       shift, and go to state 70
    KEYWORD_OR        shift, and go to state 71
    GREATER           shift, and go to state 72
    LESS              shift, and go to state 73
    EQUALS            shift, and go to state 74
    GREATER_EQUAL     shift, and go to state 75
    LESS_EQUAL        shift, and go to state 76
    NOT_EQUAL         shift, and go to state 77
    RIGHTPARENTHESIS  shift, and go to state 126
    '+'               shift, and go to state 79
    '-'               shift, and go to state 80
    '*'               shift, and go to state 81
    '/'               shift, and go to state 82
    '%'               shift, and go to state 83

    op  go to state 84


State 100

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist • SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

    SEMICOLON  shift, and go to state 127


State 101

   70 funcdef: KEYWORD_FUNCTION IDENTIFIER LEFTPARENTHESIS • idlist RIGHTPARENTHESIS block

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 79 (idlist)

    idlist  go to state 128


State 102

   77 idlist: IDENTIFIER • COMMA IDENTIFIER '*'
   78       | IDENTIFIER • '*'

    COMMA  shift, and go to state 129
    '*'    shift, and go to state 130


State 103

   71 funcdef: KEYWORD_FUNCTION LEFTPARENTHESIS idlist • RIGHTPARENTHESIS block

    RIGHTPARENTHESIS  shift, and go to state 131


State 104

   84 returnstmt: KEYWORD_RETURN expr SEMICOLON •

    $default  reduce using rule 84 (returnstmt)


State 105

   53 call: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 132


State 106

   68 block: LEFTBRACE stmt '*' • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 133


State 107

   14 expr: expr • op expr
   67 indexedelem: LEFTBRACE expr • COLON expr RIGHTBRACE

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    COLON          shift, and go to state 134
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 108

   58 elist: expr COMMA • expr '*'

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 135
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 109

   18 op: '*' •
   59 elist: expr '*' •

    RIGHTBRACKET      reduce using rule 59 (elist)
    RIGHTPARENTHESIS  reduce using rule 59 (elist)
    SEMICOLON         reduce using rule 59 (elist)
    $default          reduce using rule 18 (op)


State 110

   61 objectdef: LEFTBRACKET elist RIGHTBRACKET •

    $default  reduce using rule 61 (objectdef)


State 111

   62 objectdef: LEFTBRACKET indexed RIGHTBRACKET •

    $default  reduce using rule 62 (objectdef)


State 112

   64 indexed: indexedelem COMMA • indexedelem '*'

    LEFTBRACE  shift, and go to state 58

    indexedelem  go to state 136


State 113

   65 indexed: indexedelem '*' •

    $default  reduce using rule 65 (indexed)


State 114

   29 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS •

    $default  reduce using rule 29 (term)


State 115

   41 primary: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS •
   53 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 137

    $default  reduce using rule 41 (primary)


State 116

   14 expr: expr • op expr
   14     | expr op expr •

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    KEYWORD_AND    [reduce using rule 14 (expr)]
    KEYWORD_OR     [reduce using rule 14 (expr)]
    GREATER        [reduce using rule 14 (expr)]
    LESS           [reduce using rule 14 (expr)]
    EQUALS         [reduce using rule 14 (expr)]
    GREATER_EQUAL  [reduce using rule 14 (expr)]
    LESS_EQUAL     [reduce using rule 14 (expr)]
    NOT_EQUAL      [reduce using rule 14 (expr)]
    '+'            [reduce using rule 14 (expr)]
    '-'            [reduce using rule 14 (expr)]
    '*'            [reduce using rule 14 (expr)]
    '/'            [reduce using rule 14 (expr)]
    '%'            [reduce using rule 14 (expr)]
    $default       reduce using rule 14 (expr)

    op  go to state 84


State 117

   14 expr: expr • op expr
   48 member: lvalue LEFTBRACKET expr • RIGHTBRACKET

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    RIGHTBRACKET   shift, and go to state 138
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 118

   56 normcall: LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 139


State 119

   47 member: lvalue DOT IDENTIFIER •

    $default  reduce using rule 47 (member)


State 120

   57 methodcall: DOUBLECOLON IDENTIFIER • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 140


State 121

   14 expr: expr • op expr
   37 assignexpr: lvalue '=' expr •

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    $default  reduce using rule 37 (assignexpr)

    op  go to state 84


State 122

   14 expr: expr • op expr
   50 member: call LEFTBRACKET expr • RIGHTBRACKET

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    RIGHTBRACKET   shift, and go to state 141
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 123

   51 call: call LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 142


State 124

   49 member: call DOT IDENTIFIER •

    $default  reduce using rule 49 (member)


State 125

   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS • stmt KEYWORD_ELSE stmt
   81       | KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS • stmt

    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    stmt        go to state 143
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 126

   82 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr RIGHTPARENTHESIS • stmt

    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    stmt        go to state 144
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 127

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON • expr SEMICOLON elist RIGHTPARENTHESIS stmt

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 145
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 128

   70 funcdef: KEYWORD_FUNCTION IDENTIFIER LEFTPARENTHESIS idlist • RIGHTPARENTHESIS block

    RIGHTPARENTHESIS  shift, and go to state 146


State 129

   77 idlist: IDENTIFIER COMMA • IDENTIFIER '*'

    IDENTIFIER  shift, and go to state 147


State 130

   78 idlist: IDENTIFIER '*' •

    $default  reduce using rule 78 (idlist)


State 131

   71 funcdef: KEYWORD_FUNCTION LEFTPARENTHESIS idlist RIGHTPARENTHESIS • block

    LEFTBRACE  shift, and go to state 18

    block  go to state 148


State 132

   53 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 137


State 133

   68 block: LEFTBRACE stmt '*' RIGHTBRACE •

    $default  reduce using rule 68 (block)


State 134

   67 indexedelem: LEFTBRACE expr COLON • expr RIGHTBRACE

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    expr        go to state 149
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 36


State 135

   14 expr: expr • op expr
   58 elist: expr COMMA expr • '*'

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 150
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 136

   64 indexed: indexedelem COMMA indexedelem • '*'

    '*'  shift, and go to state 151


State 137

   53 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 152
    objectdef   go to state 33
    const       go to state 36


State 138

   48 member: lvalue LEFTBRACKET expr RIGHTBRACKET •

    $default  reduce using rule 48 (member)


State 139

   56 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 56 (normcall)


State 140

   57 methodcall: DOUBLECOLON IDENTIFIER LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 153
    objectdef   go to state 33
    const       go to state 36


State 141

   50 member: call LEFTBRACKET expr RIGHTBRACKET •

    $default  reduce using rule 50 (member)


State 142

   51 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 51 (call)


State 143

   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt • KEYWORD_ELSE stmt
   81       | KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt •

    KEYWORD_ELSE  shift, and go to state 154

    KEYWORD_ELSE  [reduce using rule 81 (ifstmt)]
    $default      reduce using rule 81 (ifstmt)


State 144

   82 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt •

    $default  reduce using rule 82 (whilestmt)


State 145

   14 expr: expr • op expr
   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr • SEMICOLON elist RIGHTPARENTHESIS stmt

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    SEMICOLON      shift, and go to state 155
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 146

   70 funcdef: KEYWORD_FUNCTION IDENTIFIER LEFTPARENTHESIS idlist RIGHTPARENTHESIS • block

    LEFTBRACE  shift, and go to state 18

    block  go to state 156


State 147

   77 idlist: IDENTIFIER COMMA IDENTIFIER • '*'

    '*'  shift, and go to state 157


State 148

   71 funcdef: KEYWORD_FUNCTION LEFTPARENTHESIS idlist RIGHTPARENTHESIS block •

    $default  reduce using rule 71 (funcdef)


State 149

   14 expr: expr • op expr
   67 indexedelem: LEFTBRACE expr COLON expr • RIGHTBRACE

    KEYWORD_AND    shift, and go to state 70
    KEYWORD_OR     shift, and go to state 71
    GREATER        shift, and go to state 72
    LESS           shift, and go to state 73
    EQUALS         shift, and go to state 74
    GREATER_EQUAL  shift, and go to state 75
    LESS_EQUAL     shift, and go to state 76
    NOT_EQUAL      shift, and go to state 77
    RIGHTBRACE     shift, and go to state 158
    '+'            shift, and go to state 79
    '-'            shift, and go to state 80
    '*'            shift, and go to state 81
    '/'            shift, and go to state 82
    '%'            shift, and go to state 83

    op  go to state 84


State 150

   18 op: '*' •
   58 elist: expr COMMA expr '*' •

    RIGHTBRACKET      reduce using rule 58 (elist)
    RIGHTPARENTHESIS  reduce using rule 58 (elist)
    SEMICOLON         reduce using rule 58 (elist)
    $default          reduce using rule 18 (op)


State 151

   64 indexed: indexedelem COMMA indexedelem '*' •

    $default  reduce using rule 64 (indexed)


State 152

   53 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 159


State 153

   57 methodcall: DOUBLECOLON IDENTIFIER LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 160


State 154

   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE • stmt

    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    stmt        go to state 161
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 155

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON • elist RIGHTPARENTHESIS stmt

    INTEGER          shift, and go to state 1
    KEYWORD_NOT      shift, and go to state 9
    KEYWORD_LOCAL    shift, and go to state 10
    KEYWORD_TRUE     shift, and go to state 11
    KEYWORD_FALSE    shift, and go to state 12
    KEYWORD_NIL      shift, and go to state 13
    INCREMENT        shift, and go to state 14
    DECREMENT        shift, and go to state 15
    STRING           shift, and go to state 16
    IDENTIFIER       shift, and go to state 17
    LEFTBRACKET      shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 20
    DOUBLECOLON      shift, and go to state 22
    '-'              shift, and go to state 23

    $default  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 162
    objectdef   go to state 33
    const       go to state 36


State 156

   70 funcdef: KEYWORD_FUNCTION IDENTIFIER LEFTPARENTHESIS idlist RIGHTPARENTHESIS block •

    $default  reduce using rule 70 (funcdef)


State 157

   77 idlist: IDENTIFIER COMMA IDENTIFIER '*' •

    $default  reduce using rule 77 (idlist)


State 158

   67 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE •

    $default  reduce using rule 67 (indexedelem)


State 159

   53 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 53 (call)


State 160

   57 methodcall: DOUBLECOLON IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 57 (methodcall)


State 161

   80 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt •

    $default  reduce using rule 80 (ifstmt)


State 162

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist • RIGHTPARENTHESIS stmt

    RIGHTPARENTHESIS  shift, and go to state 163


State 163

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS • stmt

    INTEGER           shift, and go to state 1
    KEYWORD_IF        shift, and go to state 2
    KEYWORD_WHILE     shift, and go to state 3
    KEYWORD_FOR       shift, and go to state 4
    KEYWORD_FUNCTION  shift, and go to state 5
    KEYWORD_RETURN    shift, and go to state 6
    KEYWORD_BREAK     shift, and go to state 7
    KEYWORD_CONTINUE  shift, and go to state 8
    KEYWORD_NOT       shift, and go to state 9
    KEYWORD_LOCAL     shift, and go to state 10
    KEYWORD_TRUE      shift, and go to state 11
    KEYWORD_FALSE     shift, and go to state 12
    KEYWORD_NIL       shift, and go to state 13
    INCREMENT         shift, and go to state 14
    DECREMENT         shift, and go to state 15
    STRING            shift, and go to state 16
    IDENTIFIER        shift, and go to state 17
    LEFTBRACE         shift, and go to state 18
    LEFTBRACKET       shift, and go to state 19
    LEFTPARENTHESIS   shift, and go to state 20
    SEMICOLON         shift, and go to state 21
    DOUBLECOLON       shift, and go to state 22
    '-'               shift, and go to state 23

    stmt        go to state 164
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    const       go to state 36
    ifstmt      go to state 37
    whilestmt   go to state 38
    forstmt     go to state 39
    returnstmt  go to state 40


State 164

   83 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt •

    $default  reduce using rule 83 (forstmt)
