Nonterminals useless in grammar

    elist_help
    exprlist
    obj
    indexedelem_list
    loopstart
    loopend
    loopstmt


Terminals unused in grammar

    KEYWORD_THEN


Rules useless in grammar

  107 exprlist: exprlist COMMA expr
  108         | expr

  109 obj: elist
  110    | indexed

  111 indexedelem_list: COMMA indexedelem indexedelem_list
  112                 | ε

  113 loopstart: ε

  114 loopend: ε

  115 loopstmt: loopstart stmt loopend


State 105 conflicts: 1 shift/reduce
State 156 conflicts: 26 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: parsing

    2 parsing: stmt parsing
    3        | ε

    4 stmts: stmts stmt
    5      | stmt

    6 stmt: expr SEMICOLON
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | KEYWORD_BREAK SEMICOLON
   12     | KEYWORD_CONTINUE SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON
   16     | error SEMICOLON

   17 expr: expr '+' expr
   18     | expr '*' expr
   19     | expr '-' expr
   20     | expr '/' expr
   21     | expr '%' expr
   22     | expr GREATER expr
   23     | expr GREATER_EQUAL expr
   24     | expr LESS expr
   25     | expr LESS_EQUAL expr
   26     | expr EQUALS expr
   27     | expr NOT_EQUAL expr

   28 $@1: ε

   29 expr: expr KEYWORD_AND $@1 M expr

   30 $@2: ε

   31 expr: expr KEYWORD_OR $@2 M expr
   32     | assignexpr
   33     | term

   34 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS
   35     | '-' expr
   36     | KEYWORD_NOT expr
   37     | INCREMENT lvalue
   38     | lvalue INCREMENT
   39     | DECREMENT lvalue
   40     | lvalue DECREMENT
   41     | primary

   42 $@3: ε

   43 assignexpr: lvalue '=' $@3 expr

   44 primary: lvalue
   45        | call
   46        | objectdef
   47        | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS
   48        | const

   49 lvalue: IDENTIFIER
   50       | KEYWORD_LOCAL IDENTIFIER
   51       | DOUBLECOLON IDENTIFIER
   52       | member

   53 member: lvalue DOT IDENTIFIER
   54       | lvalue LEFTBRACKET expr RIGHTBRACKET
   55       | call DOT IDENTIFIER
   56       | call LEFTBRACKET expr RIGHTBRACKET

   57 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS
   58     | lvalue callsuffix
   59     | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

   60 callsuffix: normcall
   61           | methodcall

   62 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS

   63 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS

   64 elist: expr
   65      | expr COMMA elist
   66      | ε

   67 objectdef: LEFTBRACKET elist RIGHTBRACKET
   68          | LEFTBRACKET indexed RIGHTBRACKET

   69 indexed: indexedelem
   70        | indexedelem COMMA indexed

   71 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE

   72 $@4: ε

   73 block: LEFTBRACE $@4 blockk RIGHTBRACE

   74 blockk: stmts blockk
   75       | ε

   76 funcname: IDENTIFIER
   77         | ε

   78 funcprefix: KEYWORD_FUNCTION funcname

   79 funcargs: LEFTPARENTHESIS idlist RIGHTPARENTHESIS

   80 funcbody: block

   81 funcdef: funcprefix funcargs funcbody

   82 const: number
   83      | STRING
   84      | KEYWORD_NIL
   85      | KEYWORD_TRUE
   86      | KEYWORD_FALSE

   87 number: "integer constant"
   88       | "real contstant"

   89 idlist: IDENTIFIER ids
   90       | ε

   91 $@5: ε

   92 ids: COMMA IDENTIFIER $@5 ids
   93    | ε

   94 ifprefix: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS

   95 elseprefix: KEYWORD_ELSE

   96 ifstmt: ifprefix stmt elseprefix stmt
   97       | ifprefix stmt

   98 whilestart: KEYWORD_WHILE

   99 whilecond: LEFTPARENTHESIS expr RIGHTPARENTHESIS

  100 whilestmt: whilestart whilecond stmt

  101 N: ε

  102 M: ε

  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON M expr SEMICOLON

  104 forstmt: forprefix N elist RIGHTPARENTHESIS N stmt N

  105 returnstmt: KEYWORD_RETURN expr SEMICOLON
  106           | KEYWORD_RETURN SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 21
    '*' (42) 18
    '+' (43) 17
    '-' (45) 19 35
    '/' (47) 20
    '=' (61) 43
    error (256) 16
    "integer constant" <intv> (258) 87
    "real contstant" <floatv> (259) 88
    KEYWORD_IF <stringv> (260) 94
    KEYWORD_THEN <stringv> (261)
    KEYWORD_ELSE <stringv> (262) 95
    KEYWORD_WHILE <stringv> (263) 98
    KEYWORD_FOR <stringv> (264) 103
    KEYWORD_FUNCTION <stringv> (265) 78
    KEYWORD_RETURN <stringv> (266) 105 106
    KEYWORD_BREAK <stringv> (267) 11
    KEYWORD_CONTINUE <stringv> (268) 12
    KEYWORD_AND <stringv> (269) 29
    KEYWORD_NOT <stringv> (270) 36
    KEYWORD_OR <stringv> (271) 31
    KEYWORD_LOCAL <stringv> (272) 50
    KEYWORD_TRUE <stringv> (273) 85
    KEYWORD_FALSE <stringv> (274) 86
    KEYWORD_NIL <stringv> (275) 84
    GREATER <stringv> (276) 22
    LESS <stringv> (277) 24
    EQUALS <stringv> (278) 26
    GREATER_EQUAL <stringv> (279) 23
    LESS_EQUAL <stringv> (280) 25
    NOT_EQUAL <stringv> (281) 27
    INCREMENT <stringv> (282) 37 38
    DECREMENT <stringv> (283) 39 40
    STRING <stringv> (284) 83
    IDENTIFIER <stringv> (285) 49 50 51 53 55 63 76 89 92
    LEFTBRACE <stringv> (286) 71 73
    RIGHTBRACE <stringv> (287) 71 73
    LEFTBRACKET <stringv> (288) 54 56 67 68
    RIGHTBRACKET <stringv> (289) 54 56 67 68
    LEFTPARENTHESIS <stringv> (290) 34 47 57 59 62 63 79 94 99 103
    RIGHTPARENTHESIS <stringv> (291) 34 47 57 59 62 63 79 94 99 104
    COMMA <stringv> (292) 65 70 92
    SEMICOLON <stringv> (293) 6 11 12 15 16 103 105 106
    COLON <stringv> (294) 71
    DOT <stringv> (295) 53 55
    DOUBLEDOT <stringv> (296) 63
    DOUBLECOLON <stringv> (297) 51
    UMINUS (298)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program <stringv> (51)
        on left: 1
        on right: 0
    parsing <stringv> (52)
        on left: 2 3
        on right: 1 2
    stmts <stmt_structt> (53)
        on left: 4 5
        on right: 4 74
    stmt <stmt_structt> (54)
        on left: 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 4 5 96 97 100 104
    expr <expression> (55)
        on left: 17 18 19 20 21 22 23 24 25 26 27 29 31 32 33
        on right: 6 17 18 19 20 21 22 23 24 25 26 27 29 31 34 35 36 43 54 56 64 65 71 94 99 103 105
    $@1 (56)
        on left: 28
        on right: 29
    $@2 (57)
        on left: 30
        on right: 31
    term <expression> (58)
        on left: 34 35 36 37 38 39 40 41
        on right: 33
    assignexpr <expression> (59)
        on left: 43
        on right: 32
    $@3 (60)
        on left: 42
        on right: 43
    primary <expression> (61)
        on left: 44 45 46 47 48
        on right: 41
    lvalue <expression> (62)
        on left: 49 50 51 52
        on right: 37 38 39 40 43 44 53 54 58
    member <expression> (63)
        on left: 53 54 55 56
        on right: 52
    call <expression> (64)
        on left: 57 58 59
        on right: 45 55 56 57
    callsuffix <calls> (65)
        on left: 60 61
        on right: 58
    normcall <calls> (66)
        on left: 62
        on right: 60
    methodcall <calls> (67)
        on left: 63
        on right: 61
    elist <expression> (68)
        on left: 64 65 66
        on right: 57 59 62 63 65 67 103 104
    objectdef <expression> (69)
        on left: 67 68
        on right: 46
    indexed <expression> (70)
        on left: 69 70
        on right: 68 70
    indexedelem <expression> (71)
        on left: 71
        on right: 69 70
    block <stmt_structt> (72)
        on left: 73
        on right: 13 80
    $@4 (73)
        on left: 72
        on right: 73
    blockk <stmt_structt> (74)
        on left: 74 75
        on right: 73 74
    funcname <sym> (75)
        on left: 76 77
        on right: 78
    funcprefix <sym> (76)
        on left: 78
        on right: 81
    funcargs <sym> (77)
        on left: 79
        on right: 81
    funcbody <unsignedv> (78)
        on left: 80
        on right: 81
    funcdef <sym> (79)
        on left: 81
        on right: 14 47 59
    const <expression> (80)
        on left: 82 83 84 85 86
        on right: 48
    number <stringv> (81)
        on left: 87 88
        on right: 82
    idlist <sym> (82)
        on left: 89 90
        on right: 79
    ids <sym> (83)
        on left: 92 93
        on right: 89 92
    $@5 (84)
        on left: 91
        on right: 92
    ifprefix <unsignedv> (85)
        on left: 94
        on right: 96 97
    elseprefix <unsignedv> (86)
        on left: 95
        on right: 96
    ifstmt <stmt_structt> (87)
        on left: 96 97
        on right: 7
    whilestart <unsignedv> (88)
        on left: 98
        on right: 100
    whilecond <unsignedv> (89)
        on left: 99
        on right: 100
    whilestmt <stringv> (90)
        on left: 100
        on right: 8
    N <unsignedv> (91)
        on left: 101
        on right: 104
    M <unsignedv> (92)
        on left: 102
        on right: 29 31 103
    forprefix <for_stmt> (93)
        on left: 103
        on right: 104
    forstmt <stringv> (94)
        on left: 104
        on right: 9
    returnstmt <expression> (95)
        on left: 105 106
        on right: 10


State 0

    0 $accept: • program $end

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $end  reduce using rule 3 (parsing)

    program     go to state 26
    parsing     go to state 27
    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 1

   16 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 2

   87 number: "integer constant" •

    $default  reduce using rule 87 (number)


State 3

   88 number: "real contstant" •

    $default  reduce using rule 88 (number)


State 4

   94 ifprefix: KEYWORD_IF • LEFTPARENTHESIS expr RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 50


State 5

   98 whilestart: KEYWORD_WHILE •

    $default  reduce using rule 98 (whilestart)


State 6

  103 forprefix: KEYWORD_FOR • LEFTPARENTHESIS elist SEMICOLON M expr SEMICOLON

    LEFTPARENTHESIS  shift, and go to state 51


State 7

   78 funcprefix: KEYWORD_FUNCTION • funcname

    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 77 (funcname)

    funcname  go to state 53


State 8

  105 returnstmt: KEYWORD_RETURN • expr SEMICOLON
  106           | KEYWORD_RETURN • SEMICOLON

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 54
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 55
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 9

   11 stmt: KEYWORD_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 10

   12 stmt: KEYWORD_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 11

   36 term: KEYWORD_NOT • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 58
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 12

   50 lvalue: KEYWORD_LOCAL • IDENTIFIER

    IDENTIFIER  shift, and go to state 59


State 13

   85 const: KEYWORD_TRUE •

    $default  reduce using rule 85 (const)


State 14

   86 const: KEYWORD_FALSE •

    $default  reduce using rule 86 (const)


State 15

   84 const: KEYWORD_NIL •

    $default  reduce using rule 84 (const)


State 16

   37 term: INCREMENT • lvalue

    KEYWORD_LOCAL    shift, and go to state 12
    IDENTIFIER       shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 60
    DOUBLECOLON      shift, and go to state 24

    lvalue  go to state 61
    member  go to state 34
    call    go to state 62


State 17

   39 term: DECREMENT • lvalue

    KEYWORD_LOCAL    shift, and go to state 12
    IDENTIFIER       shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 60
    DOUBLECOLON      shift, and go to state 24

    lvalue  go to state 63
    member  go to state 34
    call    go to state 62


State 18

   83 const: STRING •

    $default  reduce using rule 83 (const)


State 19

   49 lvalue: IDENTIFIER •

    $default  reduce using rule 49 (lvalue)


State 20

   73 block: LEFTBRACE • $@4 blockk RIGHTBRACE

    $default  reduce using rule 72 ($@4)

    $@4  go to state 64


State 21

   67 objectdef: LEFTBRACKET • elist RIGHTBRACKET
   68          | LEFTBRACKET • indexed RIGHTBRACKET

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 65
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr         go to state 66
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 67
    objectdef    go to state 36
    indexed      go to state 68
    indexedelem  go to state 69
    const        go to state 40
    number       go to state 41


State 22

   34 term: LEFTPARENTHESIS • expr RIGHTPARENTHESIS
   47 primary: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS
   59 call: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 70
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcprefix  go to state 38
    funcdef     go to state 71
    const       go to state 40
    number      go to state 41


State 23

   15 stmt: SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 24

   51 lvalue: DOUBLECOLON • IDENTIFIER

    IDENTIFIER  shift, and go to state 72


State 25

   35 term: '-' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 73
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 26

    0 $accept: program • $end

    $end  shift, and go to state 74


State 27

    1 program: parsing •

    $default  reduce using rule 1 (program)


State 28

    2 parsing: stmt • parsing

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $end  reduce using rule 3 (parsing)

    parsing     go to state 75
    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 29

    6 stmt: expr • SEMICOLON
   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    SEMICOLON      shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 30

   33 expr: term •

    $default  reduce using rule 33 (expr)


State 31

   32 expr: assignexpr •

    $default  reduce using rule 32 (expr)


State 32

   41 term: primary •

    $default  reduce using rule 41 (term)


State 33

   38 term: lvalue • INCREMENT
   40     | lvalue • DECREMENT
   43 assignexpr: lvalue • '=' $@3 expr
   44 primary: lvalue •
   53 member: lvalue • DOT IDENTIFIER
   54       | lvalue • LEFTBRACKET expr RIGHTBRACKET
   58 call: lvalue • callsuffix

    INCREMENT        shift, and go to state 90
    DECREMENT        shift, and go to state 91
    LEFTBRACKET      shift, and go to state 92
    LEFTPARENTHESIS  shift, and go to state 93
    DOT              shift, and go to state 94
    DOUBLEDOT        shift, and go to state 95
    '='              shift, and go to state 96

    $default  reduce using rule 44 (primary)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 34

   52 lvalue: member •

    $default  reduce using rule 52 (lvalue)


State 35

   45 primary: call •
   55 member: call • DOT IDENTIFIER
   56       | call • LEFTBRACKET expr RIGHTBRACKET
   57 call: call • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 100
    LEFTPARENTHESIS  shift, and go to state 101
    DOT              shift, and go to state 102

    $default  reduce using rule 45 (primary)


State 36

   46 primary: objectdef •

    $default  reduce using rule 46 (primary)


State 37

   13 stmt: block •

    $default  reduce using rule 13 (stmt)


State 38

   81 funcdef: funcprefix • funcargs funcbody

    LEFTPARENTHESIS  shift, and go to state 103

    funcargs  go to state 104


State 39

   14 stmt: funcdef •

    $default  reduce using rule 14 (stmt)


State 40

   48 primary: const •

    $default  reduce using rule 48 (primary)


State 41

   82 const: number •

    $default  reduce using rule 82 (const)


State 42

   96 ifstmt: ifprefix • stmt elseprefix stmt
   97       | ifprefix • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    stmt        go to state 105
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 43

    7 stmt: ifstmt •

    $default  reduce using rule 7 (stmt)


State 44

  100 whilestmt: whilestart • whilecond stmt

    LEFTPARENTHESIS  shift, and go to state 106

    whilecond  go to state 107


State 45

    8 stmt: whilestmt •

    $default  reduce using rule 8 (stmt)


State 46

  104 forstmt: forprefix • N elist RIGHTPARENTHESIS N stmt N

    $default  reduce using rule 101 (N)

    N  go to state 108


State 47

    9 stmt: forstmt •

    $default  reduce using rule 9 (stmt)


State 48

   10 stmt: returnstmt •

    $default  reduce using rule 10 (stmt)


State 49

   16 stmt: error SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 50

   94 ifprefix: KEYWORD_IF LEFTPARENTHESIS • expr RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 109
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 51

  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS • elist SEMICOLON M expr SEMICOLON

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 110
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 52

   76 funcname: IDENTIFIER •

    $default  reduce using rule 76 (funcname)


State 53

   78 funcprefix: KEYWORD_FUNCTION funcname •

    $default  reduce using rule 78 (funcprefix)


State 54

  106 returnstmt: KEYWORD_RETURN SEMICOLON •

    $default  reduce using rule 106 (returnstmt)


State 55

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
  105 returnstmt: KEYWORD_RETURN expr • SEMICOLON

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    SEMICOLON      shift, and go to state 111
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 56

   11 stmt: KEYWORD_BREAK SEMICOLON •

    $default  reduce using rule 11 (stmt)


State 57

   12 stmt: KEYWORD_CONTINUE SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 58

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   36 term: KEYWORD_NOT expr •

    $default  reduce using rule 36 (term)


State 59

   50 lvalue: KEYWORD_LOCAL IDENTIFIER •

    $default  reduce using rule 50 (lvalue)


State 60

   59 call: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    KEYWORD_FUNCTION  shift, and go to state 7

    funcprefix  go to state 38
    funcdef     go to state 112


State 61

   37 term: INCREMENT lvalue •
   53 member: lvalue • DOT IDENTIFIER
   54       | lvalue • LEFTBRACKET expr RIGHTBRACKET
   58 call: lvalue • callsuffix

    LEFTBRACKET      shift, and go to state 92
    LEFTPARENTHESIS  shift, and go to state 93
    DOT              shift, and go to state 94
    DOUBLEDOT        shift, and go to state 95

    $default  reduce using rule 37 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 62

   55 member: call • DOT IDENTIFIER
   56       | call • LEFTBRACKET expr RIGHTBRACKET
   57 call: call • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 100
    LEFTPARENTHESIS  shift, and go to state 101
    DOT              shift, and go to state 102


State 63

   39 term: DECREMENT lvalue •
   53 member: lvalue • DOT IDENTIFIER
   54       | lvalue • LEFTBRACKET expr RIGHTBRACKET
   58 call: lvalue • callsuffix

    LEFTBRACKET      shift, and go to state 92
    LEFTPARENTHESIS  shift, and go to state 93
    DOT              shift, and go to state 94
    DOUBLEDOT        shift, and go to state 95

    $default  reduce using rule 39 (term)

    callsuffix  go to state 97
    normcall    go to state 98
    methodcall  go to state 99


State 64

   73 block: LEFTBRACE $@4 • blockk RIGHTBRACE

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    RIGHTBRACE  reduce using rule 75 (blockk)

    stmts       go to state 113
    stmt        go to state 114
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockk      go to state 115
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 65

   71 indexedelem: LEFTBRACE • expr COLON expr RIGHTBRACE

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 116
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 66

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   64 elist: expr •
   65      | expr • COMMA elist

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    COMMA          shift, and go to state 117
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89

    $default  reduce using rule 64 (elist)


State 67

   67 objectdef: LEFTBRACKET elist • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 118


State 68

   68 objectdef: LEFTBRACKET indexed • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 119


State 69

   69 indexed: indexedelem •
   70        | indexedelem • COMMA indexed

    COMMA  shift, and go to state 120

    $default  reduce using rule 69 (indexed)


State 70

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   34 term: LEFTPARENTHESIS expr • RIGHTPARENTHESIS

    KEYWORD_AND       shift, and go to state 76
    KEYWORD_OR        shift, and go to state 77
    GREATER           shift, and go to state 78
    LESS              shift, and go to state 79
    EQUALS            shift, and go to state 80
    GREATER_EQUAL     shift, and go to state 81
    LESS_EQUAL        shift, and go to state 82
    NOT_EQUAL         shift, and go to state 83
    RIGHTPARENTHESIS  shift, and go to state 121
    '+'               shift, and go to state 85
    '-'               shift, and go to state 86
    '*'               shift, and go to state 87
    '/'               shift, and go to state 88
    '%'               shift, and go to state 89


State 71

   47 primary: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS
   59 call: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 122


State 72

   51 lvalue: DOUBLECOLON IDENTIFIER •

    $default  reduce using rule 51 (lvalue)


State 73

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   35 term: '-' expr •

    $default  reduce using rule 35 (term)


State 74

    0 $accept: program $end •

    $default  accept


State 75

    2 parsing: stmt parsing •

    $default  reduce using rule 2 (parsing)


State 76

   29 expr: expr KEYWORD_AND • $@1 M expr

    $default  reduce using rule 28 ($@1)

    $@1  go to state 123


State 77

   31 expr: expr KEYWORD_OR • $@2 M expr

    $default  reduce using rule 30 ($@2)

    $@2  go to state 124


State 78

   22 expr: expr GREATER • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 79

   24 expr: expr LESS • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 80

   26 expr: expr EQUALS • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 127
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 81

   23 expr: expr GREATER_EQUAL • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 128
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 82

   25 expr: expr LESS_EQUAL • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 129
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 83

   27 expr: expr NOT_EQUAL • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 130
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 84

    6 stmt: expr SEMICOLON •

    $default  reduce using rule 6 (stmt)


State 85

   17 expr: expr '+' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 131
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 86

   19 expr: expr '-' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 132
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 87

   18 expr: expr '*' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 133
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 88

   20 expr: expr '/' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 134
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 89

   21 expr: expr '%' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 135
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 90

   38 term: lvalue INCREMENT •

    $default  reduce using rule 38 (term)


State 91

   40 term: lvalue DECREMENT •

    $default  reduce using rule 40 (term)


State 92

   54 member: lvalue LEFTBRACKET • expr RIGHTBRACKET

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 136
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 93

   62 normcall: LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 137
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 94

   53 member: lvalue DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 138


State 95

   63 methodcall: DOUBLEDOT • IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS

    IDENTIFIER  shift, and go to state 139


State 96

   43 assignexpr: lvalue '=' • $@3 expr

    $default  reduce using rule 42 ($@3)

    $@3  go to state 140


State 97

   58 call: lvalue callsuffix •

    $default  reduce using rule 58 (call)


State 98

   60 callsuffix: normcall •

    $default  reduce using rule 60 (callsuffix)


State 99

   61 callsuffix: methodcall •

    $default  reduce using rule 61 (callsuffix)


State 100

   56 member: call LEFTBRACKET • expr RIGHTBRACKET

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 141
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 101

   57 call: call LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 142
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 102

   55 member: call DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 143


State 103

   79 funcargs: LEFTPARENTHESIS • idlist RIGHTPARENTHESIS

    IDENTIFIER  shift, and go to state 144

    $default  reduce using rule 90 (idlist)

    idlist  go to state 145


State 104

   81 funcdef: funcprefix funcargs • funcbody

    LEFTBRACE  shift, and go to state 20

    block     go to state 146
    funcbody  go to state 147


State 105

   96 ifstmt: ifprefix stmt • elseprefix stmt
   97       | ifprefix stmt •

    KEYWORD_ELSE  shift, and go to state 148

    KEYWORD_ELSE  [reduce using rule 97 (ifstmt)]
    $default      reduce using rule 97 (ifstmt)

    elseprefix  go to state 149


State 106

   99 whilecond: LEFTPARENTHESIS • expr RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 150
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 107

  100 whilestmt: whilestart whilecond • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    stmt        go to state 151
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 108

  104 forstmt: forprefix N • elist RIGHTPARENTHESIS N stmt N

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 152
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 109

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   94 ifprefix: KEYWORD_IF LEFTPARENTHESIS expr • RIGHTPARENTHESIS

    KEYWORD_AND       shift, and go to state 76
    KEYWORD_OR        shift, and go to state 77
    GREATER           shift, and go to state 78
    LESS              shift, and go to state 79
    EQUALS            shift, and go to state 80
    GREATER_EQUAL     shift, and go to state 81
    LESS_EQUAL        shift, and go to state 82
    NOT_EQUAL         shift, and go to state 83
    RIGHTPARENTHESIS  shift, and go to state 153
    '+'               shift, and go to state 85
    '-'               shift, and go to state 86
    '*'               shift, and go to state 87
    '/'               shift, and go to state 88
    '%'               shift, and go to state 89


State 110

  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS elist • SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 154


State 111

  105 returnstmt: KEYWORD_RETURN expr SEMICOLON •

    $default  reduce using rule 105 (returnstmt)


State 112

   59 call: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 155


State 113

    4 stmts: stmts • stmt
   74 blockk: stmts • blockk

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    RIGHTBRACE  reduce using rule 75 (blockk)

    stmts       go to state 113
    stmt        go to state 156
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockk      go to state 157
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 114

    5 stmts: stmt •

    $default  reduce using rule 5 (stmts)


State 115

   73 block: LEFTBRACE $@4 blockk • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 158


State 116

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   71 indexedelem: LEFTBRACE expr • COLON expr RIGHTBRACE

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    COLON          shift, and go to state 159
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 117

   65 elist: expr COMMA • elist

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 160
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 118

   67 objectdef: LEFTBRACKET elist RIGHTBRACKET •

    $default  reduce using rule 67 (objectdef)


State 119

   68 objectdef: LEFTBRACKET indexed RIGHTBRACKET •

    $default  reduce using rule 68 (objectdef)


State 120

   70 indexed: indexedelem COMMA • indexed

    LEFTBRACE  shift, and go to state 65

    indexed      go to state 161
    indexedelem  go to state 69


State 121

   34 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS •

    $default  reduce using rule 34 (term)


State 122

   47 primary: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS •
   59 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 162

    $default  reduce using rule 47 (primary)


State 123

   29 expr: expr KEYWORD_AND $@1 • M expr

    $default  reduce using rule 102 (M)

    M  go to state 163


State 124

   31 expr: expr KEYWORD_OR $@2 • M expr

    $default  reduce using rule 102 (M)

    M  go to state 164


State 125

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   22     | expr GREATER expr •
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 126

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   24     | expr LESS expr •
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 127

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   26     | expr EQUALS expr •
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89

    EQUALS     error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 128

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   23     | expr GREATER_EQUAL expr •
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 129

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   25     | expr LESS_EQUAL expr •
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 130

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   27     | expr NOT_EQUAL expr •
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89

    EQUALS     error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 131

   17 expr: expr • '+' expr
   17     | expr '+' expr •
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 17 (expr)


State 132

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   19     | expr '-' expr •
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 19 (expr)


State 133

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   18     | expr '*' expr •
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    $default  reduce using rule 18 (expr)


State 134

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   20     | expr '/' expr •
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    $default  reduce using rule 20 (expr)


State 135

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   21     | expr '%' expr •
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr

    $default  reduce using rule 21 (expr)


State 136

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   54 member: lvalue LEFTBRACKET expr • RIGHTBRACKET

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    RIGHTBRACKET   shift, and go to state 165
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 137

   62 normcall: LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 166


State 138

   53 member: lvalue DOT IDENTIFIER •

    $default  reduce using rule 53 (member)


State 139

   63 methodcall: DOUBLEDOT IDENTIFIER • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 167


State 140

   43 assignexpr: lvalue '=' $@3 • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 168
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 141

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   56 member: call LEFTBRACKET expr • RIGHTBRACKET

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    RIGHTBRACKET   shift, and go to state 169
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 142

   57 call: call LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 170


State 143

   55 member: call DOT IDENTIFIER •

    $default  reduce using rule 55 (member)


State 144

   89 idlist: IDENTIFIER • ids

    COMMA  shift, and go to state 171

    $default  reduce using rule 93 (ids)

    ids  go to state 172


State 145

   79 funcargs: LEFTPARENTHESIS idlist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 173


State 146

   80 funcbody: block •

    $default  reduce using rule 80 (funcbody)


State 147

   81 funcdef: funcprefix funcargs funcbody •

    $default  reduce using rule 81 (funcdef)


State 148

   95 elseprefix: KEYWORD_ELSE •

    $default  reduce using rule 95 (elseprefix)


State 149

   96 ifstmt: ifprefix stmt elseprefix • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    stmt        go to state 174
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 150

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   99 whilecond: LEFTPARENTHESIS expr • RIGHTPARENTHESIS

    KEYWORD_AND       shift, and go to state 76
    KEYWORD_OR        shift, and go to state 77
    GREATER           shift, and go to state 78
    LESS              shift, and go to state 79
    EQUALS            shift, and go to state 80
    GREATER_EQUAL     shift, and go to state 81
    LESS_EQUAL        shift, and go to state 82
    NOT_EQUAL         shift, and go to state 83
    RIGHTPARENTHESIS  shift, and go to state 175
    '+'               shift, and go to state 85
    '-'               shift, and go to state 86
    '*'               shift, and go to state 87
    '/'               shift, and go to state 88
    '%'               shift, and go to state 89


State 151

  100 whilestmt: whilestart whilecond stmt •

    $default  reduce using rule 100 (whilestmt)


State 152

  104 forstmt: forprefix N elist • RIGHTPARENTHESIS N stmt N

    RIGHTPARENTHESIS  shift, and go to state 176


State 153

   94 ifprefix: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS •

    $default  reduce using rule 94 (ifprefix)


State 154

  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON • M expr SEMICOLON

    $default  reduce using rule 102 (M)

    M  go to state 177


State 155

   59 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 162


State 156

    4 stmts: stmts stmt •
    5      | stmt •

    error               reduce using rule 4 (stmts)
    error               [reduce using rule 5 (stmts)]
    "integer constant"  reduce using rule 4 (stmts)
    "integer constant"  [reduce using rule 5 (stmts)]
    "real contstant"    reduce using rule 4 (stmts)
    "real contstant"    [reduce using rule 5 (stmts)]
    KEYWORD_IF          reduce using rule 4 (stmts)
    KEYWORD_IF          [reduce using rule 5 (stmts)]
    KEYWORD_WHILE       reduce using rule 4 (stmts)
    KEYWORD_WHILE       [reduce using rule 5 (stmts)]
    KEYWORD_FOR         reduce using rule 4 (stmts)
    KEYWORD_FOR         [reduce using rule 5 (stmts)]
    KEYWORD_FUNCTION    reduce using rule 4 (stmts)
    KEYWORD_FUNCTION    [reduce using rule 5 (stmts)]
    KEYWORD_RETURN      reduce using rule 4 (stmts)
    KEYWORD_RETURN      [reduce using rule 5 (stmts)]
    KEYWORD_BREAK       reduce using rule 4 (stmts)
    KEYWORD_BREAK       [reduce using rule 5 (stmts)]
    KEYWORD_CONTINUE    reduce using rule 4 (stmts)
    KEYWORD_CONTINUE    [reduce using rule 5 (stmts)]
    KEYWORD_NOT         reduce using rule 4 (stmts)
    KEYWORD_NOT         [reduce using rule 5 (stmts)]
    KEYWORD_LOCAL       reduce using rule 4 (stmts)
    KEYWORD_LOCAL       [reduce using rule 5 (stmts)]
    KEYWORD_TRUE        reduce using rule 4 (stmts)
    KEYWORD_TRUE        [reduce using rule 5 (stmts)]
    KEYWORD_FALSE       reduce using rule 4 (stmts)
    KEYWORD_FALSE       [reduce using rule 5 (stmts)]
    KEYWORD_NIL         reduce using rule 4 (stmts)
    KEYWORD_NIL         [reduce using rule 5 (stmts)]
    INCREMENT           reduce using rule 4 (stmts)
    INCREMENT           [reduce using rule 5 (stmts)]
    DECREMENT           reduce using rule 4 (stmts)
    DECREMENT           [reduce using rule 5 (stmts)]
    STRING              reduce using rule 4 (stmts)
    STRING              [reduce using rule 5 (stmts)]
    IDENTIFIER          reduce using rule 4 (stmts)
    IDENTIFIER          [reduce using rule 5 (stmts)]
    LEFTBRACE           reduce using rule 4 (stmts)
    LEFTBRACE           [reduce using rule 5 (stmts)]
    RIGHTBRACE          reduce using rule 4 (stmts)
    RIGHTBRACE          [reduce using rule 5 (stmts)]
    LEFTBRACKET         reduce using rule 4 (stmts)
    LEFTBRACKET         [reduce using rule 5 (stmts)]
    LEFTPARENTHESIS     reduce using rule 4 (stmts)
    LEFTPARENTHESIS     [reduce using rule 5 (stmts)]
    SEMICOLON           reduce using rule 4 (stmts)
    SEMICOLON           [reduce using rule 5 (stmts)]
    DOUBLECOLON         reduce using rule 4 (stmts)
    DOUBLECOLON         [reduce using rule 5 (stmts)]
    '-'                 reduce using rule 4 (stmts)
    '-'                 [reduce using rule 5 (stmts)]
    $default            reduce using rule 4 (stmts)


State 157

   74 blockk: stmts blockk •

    $default  reduce using rule 74 (blockk)


State 158

   73 block: LEFTBRACE $@4 blockk RIGHTBRACE •

    $default  reduce using rule 73 (block)


State 159

   71 indexedelem: LEFTBRACE expr COLON • expr RIGHTBRACE

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 178
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 160

   65 elist: expr COMMA elist •

    $default  reduce using rule 65 (elist)


State 161

   70 indexed: indexedelem COMMA indexed •

    $default  reduce using rule 70 (indexed)


State 162

   59 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 179
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 163

   29 expr: expr KEYWORD_AND $@1 M • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 180
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 164

   31 expr: expr KEYWORD_OR $@2 M • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 181
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 165

   54 member: lvalue LEFTBRACKET expr RIGHTBRACKET •

    $default  reduce using rule 54 (member)


State 166

   62 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 62 (normcall)


State 167

   63 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 182
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 168

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   43 assignexpr: lvalue '=' $@3 expr •

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89

    $default  reduce using rule 43 (assignexpr)


State 169

   56 member: call LEFTBRACKET expr RIGHTBRACKET •

    $default  reduce using rule 56 (member)


State 170

   57 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 57 (call)


State 171

   92 ids: COMMA • IDENTIFIER $@5 ids

    IDENTIFIER  shift, and go to state 183


State 172

   89 idlist: IDENTIFIER ids •

    $default  reduce using rule 89 (idlist)


State 173

   79 funcargs: LEFTPARENTHESIS idlist RIGHTPARENTHESIS •

    $default  reduce using rule 79 (funcargs)


State 174

   96 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 96 (ifstmt)


State 175

   99 whilecond: LEFTPARENTHESIS expr RIGHTPARENTHESIS •

    $default  reduce using rule 99 (whilecond)


State 176

  104 forstmt: forprefix N elist RIGHTPARENTHESIS • N stmt N

    $default  reduce using rule 101 (N)

    N  go to state 184


State 177

  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON M • expr SEMICOLON

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    expr        go to state 185
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 40
    number      go to state 41


State 178

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   71 indexedelem: LEFTBRACE expr COLON expr • RIGHTBRACE

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    RIGHTBRACE     shift, and go to state 186
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 179

   59 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 187


State 180

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   29     | expr KEYWORD_AND $@1 M expr •
   31     | expr • KEYWORD_OR $@2 M expr

    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89

    $default  reduce using rule 29 (expr)


State 181

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
   31     | expr KEYWORD_OR $@2 M expr •

    KEYWORD_AND    shift, and go to state 76
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89

    $default  reduce using rule 31 (expr)


State 182

   63 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 188


State 183

   92 ids: COMMA IDENTIFIER • $@5 ids

    $default  reduce using rule 91 ($@5)

    $@5  go to state 189


State 184

  104 forstmt: forprefix N elist RIGHTPARENTHESIS N • stmt N

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    stmt        go to state 190
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    number      go to state 41
    ifprefix    go to state 42
    ifstmt      go to state 43
    whilestart  go to state 44
    whilestmt   go to state 45
    forprefix   go to state 46
    forstmt     go to state 47
    returnstmt  go to state 48


State 185

   17 expr: expr • '+' expr
   18     | expr • '*' expr
   19     | expr • '-' expr
   20     | expr • '/' expr
   21     | expr • '%' expr
   22     | expr • GREATER expr
   23     | expr • GREATER_EQUAL expr
   24     | expr • LESS expr
   25     | expr • LESS_EQUAL expr
   26     | expr • EQUALS expr
   27     | expr • NOT_EQUAL expr
   29     | expr • KEYWORD_AND $@1 M expr
   31     | expr • KEYWORD_OR $@2 M expr
  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON M expr • SEMICOLON

    KEYWORD_AND    shift, and go to state 76
    KEYWORD_OR     shift, and go to state 77
    GREATER        shift, and go to state 78
    LESS           shift, and go to state 79
    EQUALS         shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    NOT_EQUAL      shift, and go to state 83
    SEMICOLON      shift, and go to state 191
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89


State 186

   71 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE •

    $default  reduce using rule 71 (indexedelem)


State 187

   59 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 59 (call)


State 188

   63 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 63 (methodcall)


State 189

   92 ids: COMMA IDENTIFIER $@5 • ids

    COMMA  shift, and go to state 171

    $default  reduce using rule 93 (ids)

    ids  go to state 192


State 190

  104 forstmt: forprefix N elist RIGHTPARENTHESIS N stmt • N

    $default  reduce using rule 101 (N)

    N  go to state 193


State 191

  103 forprefix: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON M expr SEMICOLON •

    $default  reduce using rule 103 (forprefix)


State 192

   92 ids: COMMA IDENTIFIER $@5 ids •

    $default  reduce using rule 92 (ids)


State 193

  104 forstmt: forprefix N elist RIGHTPARENTHESIS N stmt N •

    $default  reduce using rule 104 (forstmt)
