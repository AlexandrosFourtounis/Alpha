Terminals unused in grammar

    KEYWORD_THEN


Rules useless in parser due to conflicts

   62 elist: ε

  100 $@9: ε


State 0 conflicts: 4 shift/reduce
State 8 conflicts: 1 reduce/reduce
State 11 conflicts: 3 shift/reduce
State 21 conflicts: 4 shift/reduce, 1 reduce/reduce
State 22 conflicts: 3 shift/reduce
State 25 conflicts: 3 shift/reduce
State 28 conflicts: 4 shift/reduce
State 46 conflicts: 3 shift/reduce
State 47 conflicts: 3 shift/reduce
State 48 conflicts: 3 shift/reduce, 1 reduce/reduce
State 51 conflicts: 3 shift/reduce
State 61 conflicts: 3 shift/reduce, 1 reduce/reduce
State 66 conflicts: 4 shift/reduce
State 67 conflicts: 3 shift/reduce
State 81 conflicts: 3 shift/reduce
State 82 conflicts: 3 shift/reduce
State 83 conflicts: 3 shift/reduce
State 84 conflicts: 3 shift/reduce
State 85 conflicts: 3 shift/reduce
State 86 conflicts: 3 shift/reduce
State 87 conflicts: 3 shift/reduce
State 88 conflicts: 3 shift/reduce
State 90 conflicts: 3 shift/reduce
State 91 conflicts: 3 shift/reduce
State 92 conflicts: 3 shift/reduce
State 93 conflicts: 3 shift/reduce
State 96 conflicts: 3 shift/reduce
State 99 conflicts: 3 shift/reduce
State 100 conflicts: 3 shift/reduce, 1 reduce/reduce
State 112 conflicts: 4 shift/reduce
State 115 conflicts: 3 shift/reduce
State 135 conflicts: 3 shift/reduce
State 139 conflicts: 4 shift/reduce
State 140 conflicts: 4 shift/reduce
State 141 conflicts: 3 shift/reduce
State 148 conflicts: 3 shift/reduce, 1 reduce/reduce
State 151 conflicts: 3 shift/reduce
State 154 conflicts: 3 shift/reduce, 1 reduce/reduce
State 157 conflicts: 2 reduce/reduce
State 161 conflicts: 1 shift/reduce
State 171 conflicts: 4 shift/reduce
State 172 conflicts: 3 shift/reduce, 1 reduce/reduce
State 184 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: parsing

    2 parsing: stmt parsing
    3        | stmt

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | KEYWORD_BREAK SEMICOLON
   10     | KEYWORD_CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON
   14     | error SEMICOLON

   15 expr: expr '+' expr
   16     | expr '*' expr
   17     | expr '/' expr
   18     | expr '%' expr
   19     | expr GREATER expr
   20     | expr GREATER_EQUAL expr
   21     | expr LESS expr
   22     | expr LESS_EQUAL expr
   23     | expr EQUALS expr
   24     | expr NOT_EQUAL expr
   25     | expr KEYWORD_AND expr
   26     | expr KEYWORD_OR expr
   27     | assignexpr
   28     | term

   29 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS
   30     | '-' expr
   31     | KEYWORD_NOT expr
   32     | INCREMENT lvalue
   33     | lvalue INCREMENT
   34     | DECREMENT lvalue
   35     | lvalue DECREMENT
   36     | primary

   37 $@1: ε

   38 assignexpr: lvalue '=' $@1 expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS
   43        | const

   44 lvalue: IDENTIFIER
   45       | KEYWORD_LOCAL IDENTIFIER
   46       | DOUBLECOLON IDENTIFIER callsuffix
   47       | DOUBLECOLON IDENTIFIER
   48       | member

   49 member: lvalue DOT IDENTIFIER member
   50       | lvalue LEFTBRACKET expr RIGHTBRACKET
   51       | call DOT IDENTIFIER
   52       | call LEFTBRACKET expr RIGHTBRACKET
   53       | ε

   54 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS
   55     | IDENTIFIER callsuffix
   56     | LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS

   60 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS

   61 elist: exprlist
   62      | ε

   63 exprlist: exprlist COMMA expr
   64         | expr

   65 objectdef: LEFTBRACKET obj RIGHTBRACKET
   66          | LEFTBRACKET RIGHTBRACKET

   67 obj: elist
   68    | indexed

   69 indexed: indexedelem COMMA indexed
   70        | indexedelem

   71 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE

   72 $@2: ε

   73 block: LEFTBRACE $@2 blockk RIGHTBRACE

   74 blockk: stmt blockk
   75       | ε

   76 $@3: ε

   77 $@4: ε

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@4 block

   79 $@5: ε

   80 $@6: ε

   81 funcdef: KEYWORD_FUNCTION $@5 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@6 block

   82 const: number
   83      | STRING
   84      | KEYWORD_NIL
   85      | KEYWORD_TRUE
   86      | KEYWORD_FALSE

   87 number: "integer constant"
   88       | "real contstant"

   89 idlist: IDENTIFIER ids
   90       | ε

   91 $@7: ε

   92 ids: COMMA IDENTIFIER $@7 ids
   93    | ε

   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   95       | KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

   96 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

   98 $@8: ε

   99 returnstmt: KEYWORD_RETURN $@8 expr SEMICOLON

  100 $@9: ε

  101 returnstmt: KEYWORD_RETURN $@9 SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 18
    '*' (42) 16
    '+' (43) 15
    '-' (45) 30
    '/' (47) 17
    '=' (61) 38
    error (256) 14
    "integer constant" <intv> (258) 87
    "real contstant" <floatv> (259) 88
    KEYWORD_IF <stringv> (260) 94 95
    KEYWORD_THEN <stringv> (261)
    KEYWORD_ELSE <stringv> (262) 94
    KEYWORD_WHILE <stringv> (263) 96
    KEYWORD_FOR <stringv> (264) 97
    KEYWORD_FUNCTION <stringv> (265) 78 81
    KEYWORD_RETURN <stringv> (266) 99 101
    KEYWORD_BREAK <stringv> (267) 9
    KEYWORD_CONTINUE <stringv> (268) 10
    KEYWORD_AND <stringv> (269) 25
    KEYWORD_NOT <stringv> (270) 31
    KEYWORD_OR <stringv> (271) 26
    KEYWORD_LOCAL <stringv> (272) 45
    KEYWORD_TRUE <stringv> (273) 85
    KEYWORD_FALSE <stringv> (274) 86
    KEYWORD_NIL <stringv> (275) 84
    GREATER <stringv> (276) 19
    LESS <stringv> (277) 21
    EQUALS <stringv> (278) 23
    GREATER_EQUAL <stringv> (279) 20
    LESS_EQUAL <stringv> (280) 22
    NOT_EQUAL <stringv> (281) 24
    INCREMENT <stringv> (282) 32 33
    DECREMENT <stringv> (283) 34 35
    STRING <stringv> (284) 83
    IDENTIFIER <stringv> (285) 44 45 46 47 49 51 55 60 78 89 92
    LEFTBRACE <stringv> (286) 71 73
    RIGHTBRACE <stringv> (287) 71 73
    LEFTBRACKET <stringv> (288) 50 52 65 66
    RIGHTBRACKET <stringv> (289) 50 52 65 66
    LEFTPARENTHESIS <stringv> (290) 29 42 54 56 59 60 78 81 94 95 96 97
    RIGHTPARENTHESIS <stringv> (291) 29 42 54 56 59 60 78 81 94 95 96 97
    COMMA <stringv> (292) 63 69 92
    SEMICOLON <stringv> (293) 4 9 10 13 14 97 99 101
    COLON <stringv> (294) 71
    DOT <stringv> (295) 49 51
    DOUBLEDOT <stringv> (296) 60
    DOUBLECOLON <stringv> (297) 46 47
    UMINUS (298)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program <stringv> (51)
        on left: 1
        on right: 0
    parsing <stringv> (52)
        on left: 2 3
        on right: 1 2
    stmt <stringv> (53)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 74 94 95 96 97
    expr <stringv> (54)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 29 30 31 38 50 52 63 64 71 94 95 96 97 99
    term <stringv> (55)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr <stringv> (56)
        on left: 38
        on right: 27
    $@1 (57)
        on left: 37
        on right: 38
    primary <stringv> (58)
        on left: 39 40 41 42 43
        on right: 36
    lvalue <stringv> (59)
        on left: 44 45 46 47 48
        on right: 32 33 34 35 38 39 49 50
    member <stringv> (60)
        on left: 49 50 51 52 53
        on right: 48 49
    call <stringv> (61)
        on left: 54 55 56
        on right: 40 51 52 54
    callsuffix <stringv> (62)
        on left: 57 58
        on right: 46 55
    normcall <stringv> (63)
        on left: 59
        on right: 57
    methodcall <stringv> (64)
        on left: 60
        on right: 58
    elist <stringv> (65)
        on left: 61 62
        on right: 54 56 59 60 67 97
    exprlist <stringv> (66)
        on left: 63 64
        on right: 61 63
    objectdef <stringv> (67)
        on left: 65 66
        on right: 41
    obj <stringv> (68)
        on left: 67 68
        on right: 65
    indexed <stringv> (69)
        on left: 69 70
        on right: 68 69
    indexedelem <stringv> (70)
        on left: 71
        on right: 69 70
    block <stringv> (71)
        on left: 73
        on right: 11 78 81
    $@2 (72)
        on left: 72
        on right: 73
    blockk <stringv> (73)
        on left: 74 75
        on right: 73 74
    funcdef <stringv> (74)
        on left: 78 81
        on right: 12 42 56
    $@3 (75)
        on left: 76
        on right: 78
    $@4 (76)
        on left: 77
        on right: 78
    $@5 (77)
        on left: 79
        on right: 81
    $@6 (78)
        on left: 80
        on right: 81
    const <stringv> (79)
        on left: 82 83 84 85 86
        on right: 43
    number <stringv> (80)
        on left: 87 88
        on right: 82
    idlist <stringv> (81)
        on left: 89 90
        on right: 78 81
    ids (82)
        on left: 92 93
        on right: 89 92
    $@7 (83)
        on left: 91
        on right: 92
    ifstmt <stringv> (84)
        on left: 94 95
        on right: 5
    whilestmt <stringv> (85)
        on left: 96
        on right: 6
    forstmt <stringv> (86)
        on left: 97
        on right: 7
    returnstmt <stringv> (87)
        on left: 99 101
        on right: 8
    $@8 (88)
        on left: 98
        on right: 99
    $@9 (89)
        on left: 100
        on right: 101


State 0

    0 $accept: • program $end

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    program     go to state 26
    parsing     go to state 27
    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 1

   14 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 45


State 2

   87 number: "integer constant" •

    $default  reduce using rule 87 (number)


State 3

   88 number: "real contstant" •

    $default  reduce using rule 88 (number)


State 4

   94 ifstmt: KEYWORD_IF • LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   95       | KEYWORD_IF • LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

    LEFTPARENTHESIS  shift, and go to state 46


State 5

   96 whilestmt: KEYWORD_WHILE • LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt

    LEFTPARENTHESIS  shift, and go to state 47


State 6

   97 forstmt: KEYWORD_FOR • LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

    LEFTPARENTHESIS  shift, and go to state 48


State 7

   78 funcdef: KEYWORD_FUNCTION • IDENTIFIER $@3 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@4 block
   81        | KEYWORD_FUNCTION • $@5 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@6 block

    IDENTIFIER  shift, and go to state 49

    $default  reduce using rule 79 ($@5)

    $@5  go to state 50


State 8

   99 returnstmt: KEYWORD_RETURN • $@8 expr SEMICOLON
  101           | KEYWORD_RETURN • $@9 SEMICOLON

    SEMICOLON  reduce using rule 98 ($@8)
    SEMICOLON  [reduce using rule 100 ($@9)]
    $default   reduce using rule 98 ($@8)

    $@8  go to state 51
    $@9  go to state 52


State 9

    9 stmt: KEYWORD_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 10

   10 stmt: KEYWORD_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 11

   31 term: KEYWORD_NOT • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 55
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 12

   45 lvalue: KEYWORD_LOCAL • IDENTIFIER

    IDENTIFIER  shift, and go to state 56


State 13

   85 const: KEYWORD_TRUE •

    $default  reduce using rule 85 (const)


State 14

   86 const: KEYWORD_FALSE •

    $default  reduce using rule 86 (const)


State 15

   84 const: KEYWORD_NIL •

    $default  reduce using rule 84 (const)


State 16

   32 term: INCREMENT • lvalue

    KEYWORD_LOCAL    shift, and go to state 12
    IDENTIFIER       shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 57
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 53 (member)

    lvalue  go to state 58
    member  go to state 34
    call    go to state 59


State 17

   34 term: DECREMENT • lvalue

    KEYWORD_LOCAL    shift, and go to state 12
    IDENTIFIER       shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 57
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 53 (member)

    lvalue  go to state 60
    member  go to state 34
    call    go to state 59


State 18

   83 const: STRING •

    $default  reduce using rule 83 (const)


State 19

   44 lvalue: IDENTIFIER •
   55 call: IDENTIFIER • callsuffix

    LEFTPARENTHESIS  shift, and go to state 61
    DOUBLEDOT        shift, and go to state 62

    $default  reduce using rule 44 (lvalue)

    callsuffix  go to state 63
    normcall    go to state 64
    methodcall  go to state 65


State 20

   73 block: LEFTBRACE • $@2 blockk RIGHTBRACE

    $default  reduce using rule 72 ($@2)

    $@2  go to state 66


State 21

   65 objectdef: LEFTBRACKET • obj RIGHTBRACKET
   66          | LEFTBRACKET • RIGHTBRACKET

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 67
    LEFTBRACKET         shift, and go to state 21
    RIGHTBRACKET        shift, and go to state 68
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT     [reduce using rule 53 (member)]
    DECREMENT     [reduce using rule 53 (member)]
    LEFTBRACKET   [reduce using rule 53 (member)]
    RIGHTBRACKET  [reduce using rule 53 (member)]
    RIGHTBRACKET  [reduce using rule 62 (elist)]
    $default      reduce using rule 53 (member)

    expr         go to state 69
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 70
    exprlist     go to state 71
    objectdef    go to state 36
    obj          go to state 72
    indexed      go to state 73
    indexedelem  go to state 74
    const        go to state 39
    number       go to state 40


State 22

   29 term: LEFTPARENTHESIS • expr RIGHTPARENTHESIS
   42 primary: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS
   56 call: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 75
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 76
    const       go to state 39
    number      go to state 40


State 23

   13 stmt: SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 24

   46 lvalue: DOUBLECOLON • IDENTIFIER callsuffix
   47       | DOUBLECOLON • IDENTIFIER

    IDENTIFIER  shift, and go to state 77


State 25

   30 term: '-' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 78
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 26

    0 $accept: program • $end

    $end  shift, and go to state 79


State 27

    1 program: parsing •

    $default  reduce using rule 1 (program)


State 28

    2 parsing: stmt • parsing
    3        | stmt •

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    $end           reduce using rule 3 (parsing)
    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    parsing     go to state 80
    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 29

    4 stmt: expr • SEMICOLON
   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    SEMICOLON      shift, and go to state 89
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 30

   28 expr: term •

    $default  reduce using rule 28 (expr)


State 31

   27 expr: assignexpr •

    $default  reduce using rule 27 (expr)


State 32

   36 term: primary •

    $default  reduce using rule 36 (term)


State 33

   33 term: lvalue • INCREMENT
   35     | lvalue • DECREMENT
   38 assignexpr: lvalue • '=' $@1 expr
   39 primary: lvalue •
   49 member: lvalue • DOT IDENTIFIER member
   50       | lvalue • LEFTBRACKET expr RIGHTBRACKET

    INCREMENT    shift, and go to state 94
    DECREMENT    shift, and go to state 95
    LEFTBRACKET  shift, and go to state 96
    DOT          shift, and go to state 97
    '='          shift, and go to state 98

    $default  reduce using rule 39 (primary)


State 34

   48 lvalue: member •

    $default  reduce using rule 48 (lvalue)


State 35

   40 primary: call •
   51 member: call • DOT IDENTIFIER
   52       | call • LEFTBRACKET expr RIGHTBRACKET
   54 call: call • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 99
    LEFTPARENTHESIS  shift, and go to state 100
    DOT              shift, and go to state 101

    $default  reduce using rule 40 (primary)


State 36

   41 primary: objectdef •

    $default  reduce using rule 41 (primary)


State 37

   11 stmt: block •

    $default  reduce using rule 11 (stmt)


State 38

   12 stmt: funcdef •

    $default  reduce using rule 12 (stmt)


State 39

   43 primary: const •

    $default  reduce using rule 43 (primary)


State 40

   82 const: number •

    $default  reduce using rule 82 (const)


State 41

    5 stmt: ifstmt •

    $default  reduce using rule 5 (stmt)


State 42

    6 stmt: whilestmt •

    $default  reduce using rule 6 (stmt)


State 43

    7 stmt: forstmt •

    $default  reduce using rule 7 (stmt)


State 44

    8 stmt: returnstmt •

    $default  reduce using rule 8 (stmt)


State 45

   14 stmt: error SEMICOLON •

    $default  reduce using rule 14 (stmt)


State 46

   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS • expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   95       | KEYWORD_IF LEFTPARENTHESIS • expr RIGHTPARENTHESIS stmt

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 102
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 47

   96 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS • expr RIGHTPARENTHESIS stmt

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 103
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 48

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS • elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    SEMICOLON    reduce using rule 53 (member)
    SEMICOLON    [reduce using rule 62 (elist)]
    $default     reduce using rule 53 (member)

    expr        go to state 69
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 104
    exprlist    go to state 71
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 49

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER • $@3 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@4 block

    $default  reduce using rule 76 ($@3)

    $@3  go to state 105


State 50

   81 funcdef: KEYWORD_FUNCTION $@5 • LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@6 block

    LEFTPARENTHESIS  shift, and go to state 106


State 51

   99 returnstmt: KEYWORD_RETURN $@8 • expr SEMICOLON

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 107
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 52

  101 returnstmt: KEYWORD_RETURN $@9 • SEMICOLON

    SEMICOLON  shift, and go to state 108


State 53

    9 stmt: KEYWORD_BREAK SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 54

   10 stmt: KEYWORD_CONTINUE SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 55

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   31 term: KEYWORD_NOT expr •

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88

    $default  reduce using rule 31 (term)


State 56

   45 lvalue: KEYWORD_LOCAL IDENTIFIER •

    $default  reduce using rule 45 (lvalue)


State 57

   56 call: LEFTPARENTHESIS • funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    KEYWORD_FUNCTION  shift, and go to state 7

    funcdef  go to state 109


State 58

   32 term: INCREMENT lvalue •
   49 member: lvalue • DOT IDENTIFIER member
   50       | lvalue • LEFTBRACKET expr RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 96
    DOT          shift, and go to state 97

    $default  reduce using rule 32 (term)


State 59

   51 member: call • DOT IDENTIFIER
   52       | call • LEFTBRACKET expr RIGHTBRACKET
   54 call: call • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTBRACKET      shift, and go to state 99
    LEFTPARENTHESIS  shift, and go to state 100
    DOT              shift, and go to state 101


State 60

   34 term: DECREMENT lvalue •
   49 member: lvalue • DOT IDENTIFIER member
   50       | lvalue • LEFTBRACKET expr RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 96
    DOT          shift, and go to state 97

    $default  reduce using rule 34 (term)


State 61

   59 normcall: LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT         [reduce using rule 53 (member)]
    DECREMENT         [reduce using rule 53 (member)]
    LEFTBRACKET       [reduce using rule 53 (member)]
    RIGHTPARENTHESIS  reduce using rule 53 (member)
    RIGHTPARENTHESIS  [reduce using rule 62 (elist)]
    $default          reduce using rule 53 (member)

    expr        go to state 69
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 110
    exprlist    go to state 71
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 62

   60 methodcall: DOUBLEDOT • IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS

    IDENTIFIER  shift, and go to state 111


State 63

   55 call: IDENTIFIER callsuffix •

    $default  reduce using rule 55 (call)


State 64

   57 callsuffix: normcall •

    $default  reduce using rule 57 (callsuffix)


State 65

   58 callsuffix: methodcall •

    $default  reduce using rule 58 (callsuffix)


State 66

   73 block: LEFTBRACE $@2 • blockk RIGHTBRACE

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    RIGHTBRACE     reduce using rule 75 (blockk)
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    stmt        go to state 112
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockk      go to state 113
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 67

   71 indexedelem: LEFTBRACE • expr COLON expr RIGHTBRACE

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 114
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 68

   66 objectdef: LEFTBRACKET RIGHTBRACKET •

    $default  reduce using rule 66 (objectdef)


State 69

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   64 exprlist: expr •

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93

    $default  reduce using rule 64 (exprlist)


State 70

   67 obj: elist •

    $default  reduce using rule 67 (obj)


State 71

   61 elist: exprlist •
   63 exprlist: exprlist • COMMA expr

    COMMA  shift, and go to state 115

    $default  reduce using rule 61 (elist)


State 72

   65 objectdef: LEFTBRACKET obj • RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 116


State 73

   68 obj: indexed •

    $default  reduce using rule 68 (obj)


State 74

   69 indexed: indexedelem • COMMA indexed
   70        | indexedelem •

    COMMA  shift, and go to state 117

    $default  reduce using rule 70 (indexed)


State 75

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   29 term: LEFTPARENTHESIS expr • RIGHTPARENTHESIS

    KEYWORD_AND       shift, and go to state 81
    KEYWORD_OR        shift, and go to state 82
    GREATER           shift, and go to state 83
    LESS              shift, and go to state 84
    EQUALS            shift, and go to state 85
    GREATER_EQUAL     shift, and go to state 86
    LESS_EQUAL        shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    RIGHTPARENTHESIS  shift, and go to state 118
    '+'               shift, and go to state 90
    '*'               shift, and go to state 91
    '/'               shift, and go to state 92
    '%'               shift, and go to state 93


State 76

   42 primary: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS
   56 call: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 119


State 77

   46 lvalue: DOUBLECOLON IDENTIFIER • callsuffix
   47       | DOUBLECOLON IDENTIFIER •

    LEFTPARENTHESIS  shift, and go to state 61
    DOUBLEDOT        shift, and go to state 62

    $default  reduce using rule 47 (lvalue)

    callsuffix  go to state 120
    normcall    go to state 64
    methodcall  go to state 65


State 78

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   30 term: '-' expr •

    $default  reduce using rule 30 (term)


State 79

    0 $accept: program $end •

    $default  accept


State 80

    2 parsing: stmt parsing •

    $default  reduce using rule 2 (parsing)


State 81

   25 expr: expr KEYWORD_AND • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 82

   26 expr: expr KEYWORD_OR • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 83

   19 expr: expr GREATER • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 84

   21 expr: expr LESS • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 85

   23 expr: expr EQUALS • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 86

   20 expr: expr GREATER_EQUAL • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 87

   22 expr: expr LESS_EQUAL • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 127
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 88

   24 expr: expr NOT_EQUAL • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 128
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 89

    4 stmt: expr SEMICOLON •

    $default  reduce using rule 4 (stmt)


State 90

   15 expr: expr '+' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 129
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 91

   16 expr: expr '*' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 130
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 92

   17 expr: expr '/' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 131
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 93

   18 expr: expr '%' • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 132
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 94

   33 term: lvalue INCREMENT •

    $default  reduce using rule 33 (term)


State 95

   35 term: lvalue DECREMENT •

    $default  reduce using rule 35 (term)


State 96

   50 member: lvalue LEFTBRACKET • expr RIGHTBRACKET

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 133
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 97

   49 member: lvalue DOT • IDENTIFIER member

    IDENTIFIER  shift, and go to state 134


State 98

   38 assignexpr: lvalue '=' • $@1 expr

    $default  reduce using rule 37 ($@1)

    $@1  go to state 135


State 99

   52 member: call LEFTBRACKET • expr RIGHTBRACKET

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 136
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 100

   54 call: call LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT         [reduce using rule 53 (member)]
    DECREMENT         [reduce using rule 53 (member)]
    LEFTBRACKET       [reduce using rule 53 (member)]
    RIGHTPARENTHESIS  reduce using rule 53 (member)
    RIGHTPARENTHESIS  [reduce using rule 62 (elist)]
    $default          reduce using rule 53 (member)

    expr        go to state 69
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 137
    exprlist    go to state 71
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 101

   51 member: call DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 138


State 102

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr • RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt
   95       | KEYWORD_IF LEFTPARENTHESIS expr • RIGHTPARENTHESIS stmt

    KEYWORD_AND       shift, and go to state 81
    KEYWORD_OR        shift, and go to state 82
    GREATER           shift, and go to state 83
    LESS              shift, and go to state 84
    EQUALS            shift, and go to state 85
    GREATER_EQUAL     shift, and go to state 86
    LESS_EQUAL        shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    RIGHTPARENTHESIS  shift, and go to state 139
    '+'               shift, and go to state 90
    '*'               shift, and go to state 91
    '/'               shift, and go to state 92
    '%'               shift, and go to state 93


State 103

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   96 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr • RIGHTPARENTHESIS stmt

    KEYWORD_AND       shift, and go to state 81
    KEYWORD_OR        shift, and go to state 82
    GREATER           shift, and go to state 83
    LESS              shift, and go to state 84
    EQUALS            shift, and go to state 85
    GREATER_EQUAL     shift, and go to state 86
    LESS_EQUAL        shift, and go to state 87
    NOT_EQUAL         shift, and go to state 88
    RIGHTPARENTHESIS  shift, and go to state 140
    '+'               shift, and go to state 90
    '*'               shift, and go to state 91
    '/'               shift, and go to state 92
    '%'               shift, and go to state 93


State 104

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist • SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt

    SEMICOLON  shift, and go to state 141


State 105

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 • LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@4 block

    LEFTPARENTHESIS  shift, and go to state 142


State 106

   81 funcdef: KEYWORD_FUNCTION $@5 LEFTPARENTHESIS • idlist RIGHTPARENTHESIS $@6 block

    IDENTIFIER  shift, and go to state 143

    $default  reduce using rule 90 (idlist)

    idlist  go to state 144


State 107

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   99 returnstmt: KEYWORD_RETURN $@8 expr • SEMICOLON

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    SEMICOLON      shift, and go to state 145
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 108

  101 returnstmt: KEYWORD_RETURN $@9 SEMICOLON •

    $default  reduce using rule 101 (returnstmt)


State 109

   56 call: LEFTPARENTHESIS funcdef • RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 146


State 110

   59 normcall: LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 147


State 111

   60 methodcall: DOUBLEDOT IDENTIFIER • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 148


State 112

   74 blockk: stmt • blockk

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    RIGHTBRACE     reduce using rule 75 (blockk)
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    stmt        go to state 112
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    blockk      go to state 149
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 113

   73 block: LEFTBRACE $@2 blockk • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 150


State 114

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   71 indexedelem: LEFTBRACE expr • COLON expr RIGHTBRACE

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    COLON          shift, and go to state 151
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 115

   63 exprlist: exprlist COMMA • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 152
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 116

   65 objectdef: LEFTBRACKET obj RIGHTBRACKET •

    $default  reduce using rule 65 (objectdef)


State 117

   69 indexed: indexedelem COMMA • indexed

    LEFTBRACE  shift, and go to state 67

    indexed      go to state 153
    indexedelem  go to state 74


State 118

   29 term: LEFTPARENTHESIS expr RIGHTPARENTHESIS •

    $default  reduce using rule 29 (term)


State 119

   42 primary: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS •
   56 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 154

    $default  reduce using rule 42 (primary)


State 120

   46 lvalue: DOUBLECOLON IDENTIFIER callsuffix •

    $default  reduce using rule 46 (lvalue)


State 121

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   25     | expr KEYWORD_AND expr •
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93

    $default  reduce using rule 25 (expr)


State 122

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   26     | expr KEYWORD_OR expr •

    KEYWORD_AND    shift, and go to state 81
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93

    $default  reduce using rule 26 (expr)


State 123

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   19     | expr GREATER expr •
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 124

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   21     | expr LESS expr •
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 125

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   23     | expr EQUALS expr •
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    EQUALS     error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   20     | expr GREATER_EQUAL expr •
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 127

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   22     | expr LESS_EQUAL expr •
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 128

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   24     | expr NOT_EQUAL expr •
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87

    EQUALS     error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 129

   15 expr: expr • '+' expr
   15     | expr '+' expr •
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93

    $default  reduce using rule 15 (expr)


State 130

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   16     | expr '*' expr •
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88

    $default  reduce using rule 16 (expr)


State 131

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   17     | expr '/' expr •
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88

    $default  reduce using rule 17 (expr)


State 132

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   18     | expr '%' expr •
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr

    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88

    $default  reduce using rule 18 (expr)


State 133

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   50 member: lvalue LEFTBRACKET expr • RIGHTBRACKET

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    RIGHTBRACKET   shift, and go to state 155
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 134

   49 member: lvalue DOT IDENTIFIER • member

    KEYWORD_LOCAL    shift, and go to state 12
    IDENTIFIER       shift, and go to state 19
    LEFTPARENTHESIS  shift, and go to state 57
    DOUBLECOLON      shift, and go to state 24

    $default  reduce using rule 53 (member)

    lvalue  go to state 156
    member  go to state 157
    call    go to state 59


State 135

   38 assignexpr: lvalue '=' $@1 • expr

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 158
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 136

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   52 member: call LEFTBRACKET expr • RIGHTBRACKET

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    RIGHTBRACKET   shift, and go to state 159
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 137

   54 call: call LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 160


State 138

   51 member: call DOT IDENTIFIER •

    $default  reduce using rule 51 (member)


State 139

   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS • stmt KEYWORD_ELSE stmt
   95       | KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    stmt        go to state 161
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 140

   96 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr RIGHTPARENTHESIS • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    stmt        go to state 162
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 141

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON • expr SEMICOLON elist RIGHTPARENTHESIS stmt

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 163
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 142

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 LEFTPARENTHESIS • idlist RIGHTPARENTHESIS $@4 block

    IDENTIFIER  shift, and go to state 143

    $default  reduce using rule 90 (idlist)

    idlist  go to state 164


State 143

   89 idlist: IDENTIFIER • ids

    COMMA  shift, and go to state 165

    $default  reduce using rule 93 (ids)

    ids  go to state 166


State 144

   81 funcdef: KEYWORD_FUNCTION $@5 LEFTPARENTHESIS idlist • RIGHTPARENTHESIS $@6 block

    RIGHTPARENTHESIS  shift, and go to state 167


State 145

   99 returnstmt: KEYWORD_RETURN $@8 expr SEMICOLON •

    $default  reduce using rule 99 (returnstmt)


State 146

   56 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS • LEFTPARENTHESIS elist RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 154


State 147

   59 normcall: LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 59 (normcall)


State 148

   60 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT         [reduce using rule 53 (member)]
    DECREMENT         [reduce using rule 53 (member)]
    LEFTBRACKET       [reduce using rule 53 (member)]
    RIGHTPARENTHESIS  reduce using rule 53 (member)
    RIGHTPARENTHESIS  [reduce using rule 62 (elist)]
    $default          reduce using rule 53 (member)

    expr        go to state 69
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 168
    exprlist    go to state 71
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 149

   74 blockk: stmt blockk •

    $default  reduce using rule 74 (blockk)


State 150

   73 block: LEFTBRACE $@2 blockk RIGHTBRACE •

    $default  reduce using rule 73 (block)


State 151

   71 indexedelem: LEFTBRACE expr COLON • expr RIGHTBRACE

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT    [reduce using rule 53 (member)]
    DECREMENT    [reduce using rule 53 (member)]
    LEFTBRACKET  [reduce using rule 53 (member)]
    $default     reduce using rule 53 (member)

    expr        go to state 169
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 152

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   63 exprlist: exprlist COMMA expr •

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93

    $default  reduce using rule 63 (exprlist)


State 153

   69 indexed: indexedelem COMMA indexed •

    $default  reduce using rule 69 (indexed)


State 154

   56 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS • elist RIGHTPARENTHESIS

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT         [reduce using rule 53 (member)]
    DECREMENT         [reduce using rule 53 (member)]
    LEFTBRACKET       [reduce using rule 53 (member)]
    RIGHTPARENTHESIS  reduce using rule 53 (member)
    RIGHTPARENTHESIS  [reduce using rule 62 (elist)]
    $default          reduce using rule 53 (member)

    expr        go to state 69
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 170
    exprlist    go to state 71
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 155

   50 member: lvalue LEFTBRACKET expr RIGHTBRACKET •

    $default  reduce using rule 50 (member)


State 156

   49 member: lvalue • DOT IDENTIFIER member
   50       | lvalue • LEFTBRACKET expr RIGHTBRACKET

    LEFTBRACKET  shift, and go to state 96
    DOT          shift, and go to state 97


State 157

   48 lvalue: member •
   49 member: lvalue DOT IDENTIFIER member •

    LEFTBRACKET  reduce using rule 48 (lvalue)
    LEFTBRACKET  [reduce using rule 49 (member)]
    DOT          reduce using rule 48 (lvalue)
    DOT          [reduce using rule 49 (member)]
    $default     reduce using rule 49 (member)


State 158

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   38 assignexpr: lvalue '=' $@1 expr •

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93

    $default  reduce using rule 38 (assignexpr)


State 159

   52 member: call LEFTBRACKET expr RIGHTBRACKET •

    $default  reduce using rule 52 (member)


State 160

   54 call: call LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 54 (call)


State 161

   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt • KEYWORD_ELSE stmt
   95       | KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt •

    KEYWORD_ELSE  shift, and go to state 171

    KEYWORD_ELSE  [reduce using rule 95 (ifstmt)]
    $default      reduce using rule 95 (ifstmt)


State 162

   96 whilestmt: KEYWORD_WHILE LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt •

    $default  reduce using rule 96 (whilestmt)


State 163

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr • SEMICOLON elist RIGHTPARENTHESIS stmt

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    SEMICOLON      shift, and go to state 172
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 164

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 LEFTPARENTHESIS idlist • RIGHTPARENTHESIS $@4 block

    RIGHTPARENTHESIS  shift, and go to state 173


State 165

   92 ids: COMMA • IDENTIFIER $@7 ids

    IDENTIFIER  shift, and go to state 174


State 166

   89 idlist: IDENTIFIER ids •

    $default  reduce using rule 89 (idlist)


State 167

   81 funcdef: KEYWORD_FUNCTION $@5 LEFTPARENTHESIS idlist RIGHTPARENTHESIS • $@6 block

    $default  reduce using rule 80 ($@6)

    $@6  go to state 175


State 168

   60 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 176


State 169

   15 expr: expr • '+' expr
   16     | expr • '*' expr
   17     | expr • '/' expr
   18     | expr • '%' expr
   19     | expr • GREATER expr
   20     | expr • GREATER_EQUAL expr
   21     | expr • LESS expr
   22     | expr • LESS_EQUAL expr
   23     | expr • EQUALS expr
   24     | expr • NOT_EQUAL expr
   25     | expr • KEYWORD_AND expr
   26     | expr • KEYWORD_OR expr
   71 indexedelem: LEFTBRACE expr COLON expr • RIGHTBRACE

    KEYWORD_AND    shift, and go to state 81
    KEYWORD_OR     shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    EQUALS         shift, and go to state 85
    GREATER_EQUAL  shift, and go to state 86
    LESS_EQUAL     shift, and go to state 87
    NOT_EQUAL      shift, and go to state 88
    RIGHTBRACE     shift, and go to state 177
    '+'            shift, and go to state 90
    '*'            shift, and go to state 91
    '/'            shift, and go to state 92
    '%'            shift, and go to state 93


State 170

   56 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 178


State 171

   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    stmt        go to state 179
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 172

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON • elist RIGHTPARENTHESIS stmt

    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    INCREMENT         [reduce using rule 53 (member)]
    DECREMENT         [reduce using rule 53 (member)]
    LEFTBRACKET       [reduce using rule 53 (member)]
    RIGHTPARENTHESIS  reduce using rule 53 (member)
    RIGHTPARENTHESIS  [reduce using rule 62 (elist)]
    $default          reduce using rule 53 (member)

    expr        go to state 69
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 180
    exprlist    go to state 71
    objectdef   go to state 36
    const       go to state 39
    number      go to state 40


State 173

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 LEFTPARENTHESIS idlist RIGHTPARENTHESIS • $@4 block

    $default  reduce using rule 77 ($@4)

    $@4  go to state 181


State 174

   92 ids: COMMA IDENTIFIER • $@7 ids

    $default  reduce using rule 91 ($@7)

    $@7  go to state 182


State 175

   81 funcdef: KEYWORD_FUNCTION $@5 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@6 • block

    LEFTBRACE  shift, and go to state 20

    block  go to state 183


State 176

   60 methodcall: DOUBLEDOT IDENTIFIER LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 60 (methodcall)


State 177

   71 indexedelem: LEFTBRACE expr COLON expr RIGHTBRACE •

    $default  reduce using rule 71 (indexedelem)


State 178

   56 call: LEFTPARENTHESIS funcdef RIGHTPARENTHESIS LEFTPARENTHESIS elist RIGHTPARENTHESIS •

    $default  reduce using rule 56 (call)


State 179

   94 ifstmt: KEYWORD_IF LEFTPARENTHESIS expr RIGHTPARENTHESIS stmt KEYWORD_ELSE stmt •

    $default  reduce using rule 94 (ifstmt)


State 180

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist • RIGHTPARENTHESIS stmt

    RIGHTPARENTHESIS  shift, and go to state 184


State 181

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@4 • block

    LEFTBRACE  shift, and go to state 20

    block  go to state 185


State 182

   92 ids: COMMA IDENTIFIER $@7 • ids

    COMMA  shift, and go to state 165

    $default  reduce using rule 93 (ids)

    ids  go to state 186


State 183

   81 funcdef: KEYWORD_FUNCTION $@5 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@6 block •

    $default  reduce using rule 81 (funcdef)


State 184

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS • stmt

    error               shift, and go to state 1
    "integer constant"  shift, and go to state 2
    "real contstant"    shift, and go to state 3
    KEYWORD_IF          shift, and go to state 4
    KEYWORD_WHILE       shift, and go to state 5
    KEYWORD_FOR         shift, and go to state 6
    KEYWORD_FUNCTION    shift, and go to state 7
    KEYWORD_RETURN      shift, and go to state 8
    KEYWORD_BREAK       shift, and go to state 9
    KEYWORD_CONTINUE    shift, and go to state 10
    KEYWORD_NOT         shift, and go to state 11
    KEYWORD_LOCAL       shift, and go to state 12
    KEYWORD_TRUE        shift, and go to state 13
    KEYWORD_FALSE       shift, and go to state 14
    KEYWORD_NIL         shift, and go to state 15
    INCREMENT           shift, and go to state 16
    DECREMENT           shift, and go to state 17
    STRING              shift, and go to state 18
    IDENTIFIER          shift, and go to state 19
    LEFTBRACE           shift, and go to state 20
    LEFTBRACKET         shift, and go to state 21
    LEFTPARENTHESIS     shift, and go to state 22
    SEMICOLON           shift, and go to state 23
    DOUBLECOLON         shift, and go to state 24
    '-'                 shift, and go to state 25

    KEYWORD_AND    reduce using rule 53 (member)
    KEYWORD_OR     reduce using rule 53 (member)
    GREATER        reduce using rule 53 (member)
    LESS           reduce using rule 53 (member)
    EQUALS         reduce using rule 53 (member)
    GREATER_EQUAL  reduce using rule 53 (member)
    LESS_EQUAL     reduce using rule 53 (member)
    NOT_EQUAL      reduce using rule 53 (member)
    INCREMENT      [reduce using rule 53 (member)]
    DECREMENT      [reduce using rule 53 (member)]
    LEFTBRACKET    [reduce using rule 53 (member)]
    SEMICOLON      [reduce using rule 53 (member)]
    DOT            reduce using rule 53 (member)
    '='            reduce using rule 53 (member)
    '+'            reduce using rule 53 (member)
    '*'            reduce using rule 53 (member)
    '/'            reduce using rule 53 (member)
    '%'            reduce using rule 53 (member)

    stmt        go to state 187
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    number      go to state 40
    ifstmt      go to state 41
    whilestmt   go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 185

   78 funcdef: KEYWORD_FUNCTION IDENTIFIER $@3 LEFTPARENTHESIS idlist RIGHTPARENTHESIS $@4 block •

    $default  reduce using rule 78 (funcdef)


State 186

   92 ids: COMMA IDENTIFIER $@7 ids •

    $default  reduce using rule 92 (ids)


State 187

   97 forstmt: KEYWORD_FOR LEFTPARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHTPARENTHESIS stmt •

    $default  reduce using rule 97 (forstmt)
